<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   width="500" height="400"
			   title="Manage Group Users"
			   creationComplete="creationCompleteHandler(event)"
			   move="Helpers.doMove(this)"
			   close="closeHandler(event)" xmlns:services="com.momentumsi.c9.services.*">
	
	<fx:Metadata>
		[Event(name="usersSet", type="flash.events.Event")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.events.ProjectEvent;
			import com.momentumsi.c9.models.Account;
			import com.momentumsi.c9.models.Group;
			import com.momentumsi.c9.models.Member;
			import com.momentumsi.c9.models.Project;
			import com.momentumsi.c9.models.User;
			import com.momentumsi.c9.utils.Helpers;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			public var user:User;
			[Bindable]
			public var group:Group;
			[Bindable]
			public var nonGroupUsersCollection:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var groupUsersCollection:ArrayCollection = new ArrayCollection();
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				PopUpManager.centerPopUp(this);
				refreshUserLists();
			}
			
			protected function refreshUserLists():void
			{
				if(group != null && group.org_id != null)
				{
					orgRefresh.getOrgDetails(group.org_id);
				}
			}
			
			protected function orgRefresh_resultHandler(event:ResultEvent):void
			{
				if(group != null)
				{
					var accounts:Array = new Array();
					if(orgRefresh.result.org.accounts != null)
					{
						accounts = orgRefresh.result.org.accounts;
					}
					//refresh group
					for each(var object:Object in orgRefresh.result.org.groups)
					{
						if(group.id == object.group.id)
						{
							group = Group.buildGroup(object.group);
						}
					}
					nonGroupUsersCollection.removeAll();
					groupUsersCollection.removeAll();
					for each(var a:Object in accounts)
					{
						var u:User = User.buildUser(a.account);
						if(group.hasUser(u.id))
						{
							groupUsersCollection.addItem(u);
						}else
						{
							nonGroupUsersCollection.addItem(u);
						}
					}
				}
			}
			
			protected function orgService_resultHandler(event:ResultEvent):void
			{
				refreshUserLists();
			}
			
			protected function addUsersToGroup_clickHandler(event:MouseEvent):void
			{
				if(nonGroupUsersList.selectedIndex != -1 && group != null)
				{
					if(User(nonGroupUsersList.selectedItem).id == user.id)
					{
						Alert.show("You must re-login for this to take full effect.");
					}
					orgService.addUserToGroup(group.org_id, group.id, User(nonGroupUsersList.selectedItem).id);
				}
			}
			
			protected function removeUsersFromGroup_clickHandler(event:MouseEvent):void
			{
				if(groupUsersList.selectedIndex != -1 && group != null)
				{
					if(User(groupUsersList.selectedItem).id == user.id)
					{
						Alert.show("You must re-login for this to take full effect.");
					}
					orgService.removeUserFromGroup(group.org_id, group.id, User(groupUsersList.selectedItem).id);
				}
			}
			
			protected function closeHandler(event:CloseEvent=null):void
			{
				dispatchEvent(new Event("usersSet"));
				PopUpManager.removePopUp(this);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<services:OrgService id="orgRefresh"
							 result="orgRefresh_resultHandler(event)"/>
		
		<services:OrgService id="orgService"
							 result="orgService_resultHandler(event)"/>
	</fx:Declarations>
	
	<s:VGroup width="100%" height="90%" paddingTop="10" paddingLeft="20" paddingRight="20" paddingBottom="10">
		<s:HGroup width="100%" height="100%">
			<s:VGroup width="100%" height="100%">
				<mx:Text text="Non Group Users" fontWeight="bold"/>
				<s:BorderContainer cornerRadius="4" height="100%" width="100%">
					<s:Rect width="100%" height="100%">
						<s:fill>
							<s:SolidColor>
								<s:color>0x330066</s:color>
							</s:SolidColor>
						</s:fill>
					</s:Rect>
					<s:List id="nonGroupUsersList"
							labelField="login"
							dataProvider="{nonGroupUsersCollection}"
							styleName="transparentList"
							height="100%" width="100%" 
							color="white"/>
				</s:BorderContainer>
			</s:VGroup>
			<s:VGroup height="100%" verticalAlign="middle">
				<s:Button id="addUsersToGroup" label="&gt;&gt;" width="38" click="addUsersToGroup_clickHandler(event)" toolTip="Add user to group."/>
				<s:Button id="removeUsersFromGroup" label="&lt;&lt;" width="38" click="removeUsersFromGroup_clickHandler(event)" toolTip="Remove user from group."/>
			</s:VGroup>
			<s:VGroup width="100%" height="100%">
				<mx:Text text="Group Users" fontWeight="bold"/>
				<s:BorderContainer cornerRadius="4" height="100%" width="100%">
					<s:Rect width="100%" height="100%">
						<s:fill>
							<s:SolidColor>
								<s:color>0x330066</s:color>
							</s:SolidColor>
						</s:fill>
					</s:Rect>
					<s:List id="groupUsersList"
							labelField="login"
							dataProvider="{groupUsersCollection}"
							styleName="transparentList"
							height="100%" width="100%" 
							color="white"/>
				</s:BorderContainer>
			</s:VGroup>
		</s:HGroup>
	</s:VGroup>
	<s:Button id="closeButton" x="215" y="337" label="Close" click="closeHandler()"/>
</s:TitleWindow>
