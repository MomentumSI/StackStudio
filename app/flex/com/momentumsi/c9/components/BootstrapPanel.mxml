<?xml version="1.0" encoding="utf-8"?>
<s:HGroup xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:components="com.momentumsi.c9.components.*"
		 width="100%" xmlns:services="com.momentumsi.c9.services.*"
		 horizontalAlign="center"
		 creationComplete="hgroup1_creationCompleteHandler(event)">
	
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			import com.momentumsi.c9.components.cfn.CloudFormationNewParameter;
			import com.momentumsi.c9.utils.Helpers;
			import com.momentumsi.c9.models.Parameter;
			
			import mx.collections.ArrayCollection;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.http.mxml.HTTPService;
			
			public var parameters:ArrayCollection = new ArrayCollection();
			protected function executeButton_clickHandler(event:MouseEvent):void
			{
				if(parameters.length > 0)
				{
					var cmnds:Array = commandsPanel.textArea.text.split("\n");
					try
					{
						for each(var param:Parameter in parameters)
						{
							cmnds[3] = cmnds[3] + " " + param.defaultValue;
						}
						rundeckService.runAdhocCommand(cmnds.join("\n"));
					} 
					catch(error:Error) 
					{
						rundeckService.runAdhocCommand(commandsPanel.textArea.text);
					}
				}else
				{
					rundeckService.runAdhocCommand(commandsPanel.textArea.text);
				}
			}
			
			protected function parametersButton_clickHandler(event:MouseEvent):void
			{
				var parametersForm:ScriptParametersForm = new ScriptParametersForm();
				parametersForm.parametersCollection = parameters;
				PopUpManager.addPopUp(parametersForm, UIComponent(parentApplication), true);
			}
			
			protected function hgroup1_creationCompleteHandler(event:FlexEvent):void
			{
				
			}
			
			public function getParameters(cloudAccountId:String, bucket:String, script:String):void
			{
				parametersService.cloudAccountId = cloudAccountId;
				parametersService.getScriptParameters(bucket, script);
			}
			
			private function getParameters_resultHandler(event:ResultEvent):void
			{
				parameters = new ArrayCollection(parametersService.result as Array);
				for each(var a:Array in parameters)
				{
					var param:Parameter = new Parameter();
					param.name = a[0];
					param.description = a[1];
					parameters.setItemAt(param, parameters.getItemIndex(a));
				}
			}
			
			private function getParameters_faultHandler(event:FaultEvent):void
			{
				parameters = null;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<fx:String id="title"/>
		<fx:Object id="install"/>
		<services:RundeckService id="rundeckService"/>
		<services:CloudApiService id="parametersService"
								  result="getParameters_resultHandler(event)"
								  fault="getParameters_faultHandler(event)"/>
	</fx:Declarations>
	<components:DraggableTextPanel id="commandsPanel"
								   title="{this.title}"
								   install="{this.install}"
								   height="100%" width="100%"/>
	<s:VGroup height="100%" verticalAlign="middle">
		<s:Button id="parametersButton" width="100" label="Parameters"
				  click="parametersButton_clickHandler(event)"/>
		<s:Button id="executeButton" width="100" label="Execute"
				  click="executeButton_clickHandler(event)"/>
	</s:VGroup>
</s:HGroup>
