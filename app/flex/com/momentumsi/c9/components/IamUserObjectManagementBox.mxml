<?xml version="1.0" encoding="utf-8"?>
<c9:ObjectManagementDetailsBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		  xmlns:s="library://ns.adobe.com/flex/spark" 
		  xmlns:mx="library://ns.adobe.com/flex/mx"
		  xmlns:c9="com.momentumsi.c9.components.*" xmlns:services="com.momentumsi.c9.services.*">
	
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			import com.momentumsi.c9.models.CloudAccount;
			import com.momentumsi.c9.representers.IdentityUserRepresenter;
			import com.momentumsi.c9.utils.Helpers;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.IndexChangedEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			[Bindable]
			private var iamUserData:IdentityUserRepresenter;
			[Bindable]
			private var policiesList:ArrayCollection = new ArrayCollection();	
			
			override public function set resourceData(value:Object):void
			{
				if(value is IdentityUserRepresenter)
				{
					iamUserData = value as IdentityUserRepresenter;
				}else{
					iamUserData = new IdentityUserRepresenter(value);
				}
				super.resourceData = iamUserData;
				iamUserDetails.selectedIndex = 0;
			}
			
			protected function delete_clickHandler(event:MouseEvent):void
			{
				var destroyPopUp:DestroyResourceObjectManagement = DestroyResourceObjectManagement(PopUpManager.createPopUp(UIComponent(this.parentApplication), DestroyResourceObjectManagement, true));
				destroyPopUp.cloudAccountId = cloudAccount.id;
				destroyPopUp.resourceType = "iamUser";
				destroyPopUp.resourceDisplayId = iamUserData.name;
				if(cloudAccount.cloud_provider == CloudAccount.AMAZON)
				{
					destroyPopUp.resourceId = iamUserData.name;
				}else{
					destroyPopUp.resourceId = iamUserData.userId;
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<services:IamService id="iamService"
							 cloudAccountId="{cloudAccount.id}"/>
	</fx:Declarations>
	
	<s:HGroup paddingLeft="10" gap="20">
		<c9:TextButton text="Delete"
					   click="delete_clickHandler(event)"/>
	</s:HGroup>
	<s:BorderContainer height="100%" width="100%" alpha="1" borderVisible="false">
		<mx:TabNavigator id="iamUserDetails" width="100%" height="100%">
			<s:NavigatorContent label="Details" width="100%" height="100%">
				<s:BorderContainer borderVisible="false"  id="details" height="100%" width="100%">
					<s:Scroller width="100%" height="100%">
						<s:viewport>
							<s:HGroup>
								<s:Form>
									<s:layout>
										<s:FormLayout gap="-7"/>
									</s:layout>
									<s:FormItem label="User Name:">
										<mx:Text text="{iamUserData.name}"/>
									</s:FormItem>
									<s:FormItem label="User ID:">
										<mx:Text text="{iamUserData.userId}"/>
									</s:FormItem>
									<s:FormItem label="Path:"
												includeInLayout="{cloudAccount.cloud_provider == CloudAccount.AMAZON}"
												visible="{cloudAccount.cloud_provider == CloudAccount.AMAZON}">
										<mx:Text text="{iamUserData.path}"/>
									</s:FormItem>
									<s:FormItem label="Resource Name:"
												includeInLayout="{cloudAccount.cloud_provider == CloudAccount.AMAZON}"
												visible="{cloudAccount.cloud_provider == CloudAccount.AMAZON}">
										<mx:Text/>
									</s:FormItem>
									<s:FormItem label="Number of Groups:">
										<s:Label text="{iamUserData.userGroups.length}"/>
									</s:FormItem>
								</s:Form>
							</s:HGroup>
						</s:viewport>
					</s:Scroller>
				</s:BorderContainer>
			</s:NavigatorContent>
			<s:NavigatorContent label="Groups" width="100%" height="100%">
				<s:VGroup width="100%" height="100%" paddingLeft="10" paddingRight="10">
					<s:DataGrid id="groupsDataGrid"
								width="100%" height="100%"
								dataProvider="{iamUserData.userGroups}">
						<s:columns>
							<s:ArrayList id="groupsGridColumns">
								<s:GridColumn headerText="Group Name" dataField="name"/>
							</s:ArrayList>
						</s:columns>
					</s:DataGrid>
				</s:VGroup>
			</s:NavigatorContent>
			<s:NavigatorContent label="Policies" width="100%" height="100%">
				<s:VGroup width="100%" height="100%" paddingLeft="10" paddingRight="10">
					<s:DataGrid id="policiesDataGrid" width="100%" height="100%" dataProvider="{policiesList}">
						<s:columns>
							<s:ArrayList id="policiesGridColumns">
								<s:GridColumn headerText="Policy Name" dataField="name"/>
							</s:ArrayList>
						</s:columns>
					</s:DataGrid>
				</s:VGroup>
			</s:NavigatorContent>
		</mx:TabNavigator>
	</s:BorderContainer>
</c9:ObjectManagementDetailsBox>