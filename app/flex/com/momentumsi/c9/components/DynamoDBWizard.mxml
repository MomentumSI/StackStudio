<?xml version="1.0" encoding="utf-8"?>
<wizard:WizardWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
					 xmlns:s="library://ns.adobe.com/flex/spark" 
					 xmlns:mx="library://ns.adobe.com/flex/mx"
					 xmlns:diagrammer="fr.kapit.diagrammer.base.uicomponent.*"
					 xmlns:components="com.momentumsi.c9.components.*"
					 close="PopUpManager.removePopUp(this)"
					 creationComplete="creationCompleteHandler(event)"
					 move="Helpers.doMove(this)"
					 title="Dynamo Database Wizard"
					 width="700" height="500"
					 xmlns:wizard="com.momentumsi.c9.components.wizard.*">
	<fx:Script>
		<![CDATA[
			import com.maccherone.json.*;
			import com.momentumsi.c9.constants.AlertMessage;
			import com.momentumsi.c9.constants.ImagePath;
			import com.momentumsi.c9.constants.ResourceType;
			import com.momentumsi.c9.utils.Helpers;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.IVisualElement;
			import mx.events.CollectionEvent;
			import mx.events.DropdownEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			[Bindable]
			public var objectManagementCreate:Boolean = false;
			public var simpleDbXML:XML;
			public var simpleDbObject:Object;
			private var currentDbName:String;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				PopUpManager.centerPopUp(this);
			}
			/*
			override public function applyConfigurations():void
			{
				if(element.id == null)
				{
					return;
				}
				
				dynamoDbName.text = element.name
			}
			
			protected function previousButton_clickHandler(event:MouseEvent):void
			{
				if(dynamoDbWizardViewStack.selectedIndex > 0)
				{
					dynamoDbWizardViewStack.selectedIndex--;
				}
			}
			
			protected function nextButton_clickHandler(event:MouseEvent):void
			{
				var alert:Boolean = false;
				
				if(dynamoDbWizardViewStack.selectedChild == dynamoDbNameContent)
				{
					if(Helpers.StringReplaceAll(dynamoDbName.text, " ", "") != "")
					{
						if(Helpers.validateAlphanumeric(dynamoDbName.text))
						{
							dynamoDbNameAlert.visible = false;
						}else
						{
							dynamoDbNameAlert.text = AlertMessage.NOTALPHANUMERIC;
							dynamoDbNameAlert.visible = true;
							alert = true;
						}
					}else
					{
						dynamoDbNameAlert.text = AlertMessage.INVALID;
						dynamoDbNameAlert.visible = true;
						alert = true;
					}
				}
				
				if(!alert)
				{
					dynamoDbWizardViewStack.selectedIndex++;
				}
			}
			
			protected function submitButton_clickHandler(event:MouseEvent):void
			{
				submitButton.enabled = false;
				submitButton.label = "Saving";
				
				if(objectManagementCreate)
				{
					objectManagementLaunchSvc.send({cloud_account_id: cloudAccount.id,
						object_type: "ddb",
						name: dynamoDbName.text});
				}else
				{
					var sdbAttributes:Object = new Object();
					sdbAttributes['Type'] = ResourceType.SIMPLE_DB_INSTANCE;
					
					saveElement(simpleDbName.text, sdbAttributes);
					createVariants(simpleDbName.text, statesToApply.ignoredEnvironments);
				}
			}
			
			protected function objectManagementLaunchSvc_resultHandler(event:ResultEvent):void
			{
				Helpers.getObjectManagement(this).refreshResourceList();
				PopUpManager.removePopUp(this);
			}
			
			protected function objectManagementLaunchSvc_faultHandler(event:FaultEvent):void
			{
				Alert.show("Unable to save domain.");
				submitButton.label = "Finish";
				submitButton.enabled = true;
				trace(event.fault);
			}
			*/
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:HTTPService id="objectManagementLaunchSvc"
					   url="{Helpers.getHost()}/launch_resource"
					   resultFormat="e4x"
					   method="POST"
					   showBusyCursor="true"
					   result="objectManagementLaunchSvc_resultHandler(event)"
					   fault="objectManagementLaunchSvc_faultHandler(event)"/>
	</fx:Declarations>
	
	<s:VGroup width="100%" height="90%" gap="0">
		<s:Group width="100%" height="60" visible="{simpleDbWizardViewStack.selectedIndex == 0}" includeInLayout="{simpleDbWizardViewStack.selectedIndex == 0}">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="#FFFFFF"/>
				</s:fill>
			</s:Rect>
			<s:HGroup width="100%" height="60" verticalAlign="middle" paddingTop="10" paddingBottom="10" paddingLeft="20" gap="15">
				<s:Image source="{ImagePath.NEW_DYNAMO_DB}"/>		
				<s:Label text="Simple Database" fontWeight="bold" fontSize="24"/>		
			</s:HGroup>
		</s:Group>
		<s:Group height="60" width="100%">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="#A7A9Ad"/>
				</s:fill>
			</s:Rect>
			<s:Line x="50" y="14" width="600">
				<s:stroke>
					<s:SolidColorStroke color="#838588" weight="1"/>
				</s:stroke>
			</s:Line>
			<s:Line x="50" y="15" width="600">
				<s:stroke>
					<s:SolidColorStroke color="#D1D3D8" weight="1"/>
				</s:stroke>
			</s:Line>
			<s:HGroup width="100%" gap="435" horizontalAlign="center" paddingTop="9">
				<s:VGroup horizontalAlign="center">
					<s:Image source="/com/momentumsi/c9/assets/IconPNGs/TrailKnob.png" width="16" height="16" visible="{simpleDbWizardViewStack.selectedChild == simpleDbNameContent}"/>
					<mx:Text text="Simple DB Name" fontWeight="bold" enabled="{simpleDbWizardViewStack.selectedChild == simpleDbNameContent}" disabledColor="white"/>
				</s:VGroup>
				<s:VGroup horizontalAlign="center">
					<s:Image source="/com/momentumsi/c9/assets/IconPNGs/TrailKnob.png" width="16" height="16" visible="{simpleDbWizardViewStack.selectedChild == reviewContent}"/>
					<mx:Text text="Review" fontWeight="bold" enabled="{simpleDbWizardViewStack.selectedChild == reviewContent}" disabledColor="white"/>
				</s:VGroup>
			</s:HGroup>
		</s:Group>
		<mx:ViewStack id="simpleDbWizardViewStack" width="100%" height="100%" paddingTop="10" paddingLeft="20" paddingRight="20" creationPolicy="all">
			<s:NavigatorContent id="simpleDbNameContent" width="100%" height="100%">
				<s:Form textAlign="right">
					<s:FormItem label="Domain Name*:">
						<s:HGroup textAlign="left">
							<s:TextInput id="simpleDbName" width="250"/>
							<mx:Text id="simpleDbNameAlert" text="{AlertMessage.INVALID}" color="red" visible="false"/>
						</s:HGroup>
					</s:FormItem>
				</s:Form>
			</s:NavigatorContent>
			<s:NavigatorContent id="reviewContent" width="100%" height="100%">
				<s:VGroup paddingLeft="20" height="100%" width="100%" paddingTop="10">
					<mx:Text text="Please Review Your Simple DB" y="20" fontWeight="bold"/>
					<s:VGroup x="25" y="60" paddingLeft="20">
						<mx:Text text="Domain Name: {simpleDbName.text}"/>
					</s:VGroup>
				</s:VGroup>
			</s:NavigatorContent>
		</mx:ViewStack>
	</s:VGroup>
	<s:Button id="previousButton" x="10" y="436" label="Previous" click="previousButton_clickHandler(event)" enabled="{simpleDbWizardViewStack.selectedIndex != 0}"/>
	<s:Button id="nextButton" x="92" y="436" label="Next" click="nextButton_clickHandler(event)" enabled="{simpleDbWizardViewStack.selectedChild != reviewContent}"/>
	<s:Button id="submitButton" x="169" y="436" label="Finish" click="submitButton_clickHandler(event)" enabled="{simpleDbWizardViewStack.selectedChild == reviewContent}"/>
	<s:Button id="cancelButton" x="619" y="436" label="Cancel" click="{PopUpManager.removePopUp(this)}"/>
</wizard:WizardWindow>