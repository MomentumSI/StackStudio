<?xml version="1.0" encoding="utf-8"?>
<wizard:WizardWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   	 xmlns:s="library://ns.adobe.com/flex/spark" 
					     xmlns:mx="library://ns.adobe.com/flex/mx"
					   	 xmlns:diagrammer="fr.kapit.diagrammer.base.uicomponent.*"
					   	 xmlns:components="com.momentumsi.c9.components.*"
					   	 close="PopUpManager.removePopUp(this)"
					   	 creationComplete="creationCompleteHandler(event)"
					   	 move="Helpers.doMove(this)"
					   	 wizardType="{ResourceTypeLabel.SDB}"
					   	 width="700" height="500"
						 xmlns:wizard="com.momentumsi.c9.components.wizard.*" xmlns:services="com.momentumsi.c9.services.*">
	<fx:Script>
		<![CDATA[
			import com.maccherone.json.*;
			import com.momentumsi.c9.constants.AlertMessage;
			import com.momentumsi.c9.constants.ImagePath;
			import com.momentumsi.c9.constants.ResourceType;
			import com.momentumsi.c9.constants.ResourceTypeLabel;
			import com.momentumsi.c9.utils.Helpers;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.IVisualElement;
			import mx.events.CollectionEvent;
			import mx.events.DropdownEvent;
			import mx.events.FlexEvent;
			import mx.events.ListEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;

			public var simpleDbXML:XML;
			public var simpleDbObject:Object;
			private var currentDbName:String;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				PopUpManager.centerPopUp(this);
			}
			
			override public function applyConfigurations():void
			{
				if(element.id == null)
				{
					return;
				}
				
				simpleDbName.text = element.name
			}
			
			protected function previousButton_clickHandler(event:MouseEvent):void
			{
				if(simpleDbWizardViewStack.selectedIndex > 0)
				{
					simpleDbWizardViewStack.selectedIndex--;
				}
			}
			
			protected function nextButton_clickHandler(event:MouseEvent):void
			{
				var alert:Boolean = false;
				
				if(simpleDbWizardViewStack.selectedChild == simpleDbNameContent)
				{
					if(Helpers.StringReplaceAll(simpleDbName.text, " ", "") != "")
					{
						if(Helpers.validateAlphanumeric(simpleDbName.text))
						{
							if(objectManagementCreate)
							{
								simpleDbNameAlert.visible = false;						
							}else
							{
								if(projectVersion.validateUniqueName(simpleDbName.text, element))
								{
									simpleDbNameAlert.visible = false;
								}else
								{
									simpleDbNameAlert.text = AlertMessage.NOT_UNIQUE;
									simpleDbNameAlert.visible = true;
									alert = true;
								}
							}
						}else
						{
							simpleDbNameAlert.text = AlertMessage.NOTALPHANUMERIC;
							simpleDbNameAlert.visible = true;
							alert = true;
						}
					}else
					{
						simpleDbNameAlert.text = AlertMessage.INVALID;
						simpleDbNameAlert.visible = true;
						alert = true;
					}
				}
				
				if(!alert)
				{
					simpleDbWizardViewStack.selectedIndex++;
				}
			}
			
			protected function submitButton_clickHandler(event:MouseEvent):void
			{
				submitButton.enabled = false;
				submitButton.label = "Saving";
				
				if(objectManagementCreate)
				{
					objectManagementLaunchSvc.send({physical_id: simpleDbName.text});
				}else
				{
					var sdbAttributes:Object = new Object();
					sdbAttributes['Type'] = ResourceType.SIMPLE_DB_INSTANCE;

					saveElement(simpleDbName.text, sdbAttributes);
					//createVariants(simpleDbName.text, statesToApply.ignoredEnvironments);
				}
			}
			
			protected function objectManagementLaunchSvc_resultHandler(event:ResultEvent):void
			{
				Helpers.getObjectManagement(this).refreshResourceList();
				PopUpManager.removePopUp(this);
			}
			
			protected function objectManagementLaunchSvc_faultHandler(event:FaultEvent):void
			{
				Alert.show("Unable to save domain.");
				submitButton.label = "Finish";
				submitButton.enabled = true;
				trace(event.fault);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<services:CloudApiService id="objectManagementLaunchSvc"
								  cloudAccountId="{cloudAccount.id}"
								  region="{region}"
								  action="create_domain"
								  serviceType="{CloudApiService.SIMPLE_DB_SERVICE}"
								  result="objectManagementLaunchSvc_resultHandler(event)"
								  fault="objectManagementLaunchSvc_faultHandler(event)"/>
	</fx:Declarations>
	
	<s:VGroup width="100%" height="90%" gap="0">
		<wizard:WizardWindowTitle id="sdbWindowTitle"
								  wizardStack="{simpleDbWizardViewStack}"
								  resourceImage="{ImagePath.NEW_SDB}"
								  resourceLabel="{wizardDisplayName}"/>
		<wizard:CookieTrail id="sdbCookieTrail"
							wizardStack="{simpleDbWizardViewStack}"/>
		<mx:ViewStack id="simpleDbWizardViewStack" width="100%" height="100%" paddingTop="10" paddingLeft="20" paddingRight="20" creationPolicy="all">
			<s:NavigatorContent id="simpleDbNameContent" label="Details" width="100%" height="100%">
				<s:Form textAlign="right">
					<s:FormItem label="Domain Name*:">
						<s:HGroup textAlign="left">
							<s:TextInput id="simpleDbName" width="250"/>
							<mx:Text id="simpleDbNameAlert" text="{AlertMessage.INVALID}" color="red" visible="false"/>
						</s:HGroup>
					</s:FormItem>
				</s:Form>
			</s:NavigatorContent>
			<s:NavigatorContent id="reviewContent" label="Review" width="100%" height="100%">
				<s:VGroup paddingLeft="20" height="100%" width="100%" paddingTop="10">
					<mx:Text text="Please Review Your Simple DB" y="20" fontWeight="bold"/>
					<s:VGroup x="25" y="60" paddingLeft="20">
						<mx:Text text="Domain Name: {simpleDbName.text}"/>
					</s:VGroup>
				</s:VGroup>
			</s:NavigatorContent>
		</mx:ViewStack>
	</s:VGroup>
	<s:Button id="previousButton" x="10" y="436" label="Previous" click="previousButton_clickHandler(event)" enabled="{simpleDbWizardViewStack.selectedIndex != 0}"/>
	<s:Button id="nextButton" x="92" y="436" label="Next" click="nextButton_clickHandler(event)" enabled="{simpleDbWizardViewStack.selectedChild != reviewContent}"/>
	<s:Button id="submitButton" x="169" y="436" label="Finish" click="submitButton_clickHandler(event)" enabled="{simpleDbWizardViewStack.selectedChild == reviewContent}"/>
	<s:Button id="cancelButton" x="619" y="436" label="Cancel" click="{PopUpManager.removePopUp(this)}"/>
</wizard:WizardWindow>
