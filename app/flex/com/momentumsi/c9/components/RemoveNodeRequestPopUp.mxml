<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   creationComplete="creationCompleteHandler(event)"
		       move="Helpers.doMove(this)"
			   close="PopUpManager.removePopUp(this)"
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="202" xmlns:uicomponent="fr.kapit.diagrammer.base.uicomponent.*"
			   title="Remove Element">
	
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.utils.Helpers;
			
			import fr.kapit.diagrammer.Diagrammer;
			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			protected function okButton_clickHandler(event:MouseEvent):void
			{
				var type:String = nodeToDelete.data.name();
				if(terminate.selected)
				{
					switch(type)
					{
						case "load-balancer":
							removeAndTerminateSvc.url = Helpers.getHost() + "/load_balancers/remove_and_terminate/" + nodeToDelete.data.child('id') + ".xml";
							break;
						case "ec2-instance":
							removeAndTerminateSvc.url = Helpers.getHost() + "/ec2_instances/remove_and_terminate/" + nodeToDelete.data.child('id') + ".xml";
							break;
						case "auto-scale":
							removeAndTerminateSvc.url = Helpers.getHost() + "/auto_scales/remove_and_terminate/" + nodeToDelete.data.child('id') + ".xml";
							break;
						case "rds-db-instance":
							removeAndTerminateSvc.url = Helpers.getHost() + "/rds_db_instances/remove_and_terminate/" + nodeToDelete.data.child('id') + ".xml";
							break;
						case "ebs-volume":
							removeAndTerminateSvc.url = Helpers.getHost() + "/ebs_volumes/remove_and_terminate/" + nodeToDelete.data.child('id') + ".xml";
							break;
						case "elastic-beanstalk-app":
							removeAndTerminateSvc.url = Helpers.getHost() + "/elastic_beanstalk_apps/remove_and_terminate/" + nodeToDelete.data.child('id') + ".xml";
							break;
						case "s3":
							removeAndTerminateSvc.url = Helpers.getHost() + "/s3s/remove_and_terminate/" + nodeToDelete.data.child('id') + ".xml";
							break;
						case "sqs-message":
							removeAndTerminateSvc.url = Helpers.getHost() + "/sqs_messages/remove_and_terminate/" + nodeToDelete.data.child('id') + ".xml";
							break;
						case "sns-topic":
							removeAndTerminateSvc.url = Helpers.getHost() + "/sns_topics/remove_and_terminate/" + nodeToDelete.data.child('id') + ".xml";
							break;
						case "elastic-cache":
							removeAndTerminateSvc.url = Helpers.getHost() + "/elastic_caches/remove_and_terminate/" + nodeToDelete.data.child('id') + ".xml";
							break;
					}
					if(removeAndTerminateSvc.url != null)						
					{
						removeAndTerminateSvc.send();
					}

				}
				PopUpManager.removePopUp(this);
			}
			
			protected function cancel_clickHandler(event:MouseEvent):void
			{
				PopUpManager.removePopUp(this);
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				PopUpManager.centerPopUp(this);
			}
			
			protected function removeAndTerminateSvc_resultHandler(event:ResultEvent):void
			{
				var designDiagram:Diagrammer = Helpers.getDesignDiagram(this);
				designDiagram.removeNodeElement(nodeToDelete.itemID);
				var mainBox:MainBox = Helpers.getMainBox(this);
				mainBox.refresh();
			}
			
			protected function removeAndTerminateSvc_faultHandler(event:FaultEvent):void
			{
				trace(event.message);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<fx:Object id="runningObject"/>
		<uicomponent:DiagramSprite id="nodeToDelete"/>
		
		<s:HTTPService id="removeAndTerminateSvc"
					   method="GET"
					   resultFormat="e4x"
					   showBusyCursor="true"
					   result="removeAndTerminateSvc_resultHandler(event)"
					   fault="removeAndTerminateSvc_faultHandler(event)"/>
		
	</fx:Declarations>
	<s:VGroup height="100%" width="100%">
		<s:HGroup width="100%" paddingLeft="5" paddingRight="5" paddingTop="5">
			<mx:Text width="100%"
					 text="This object has been provisioned.  What would you like to do with the provisioned item?"/>
		</s:HGroup>
		<s:VGroup paddingLeft="35" paddingTop="10">
			<s:RadioButton id="sandbox" label="Send to Sandbox" enabled="false"/>
			<s:RadioButton id="terminate" label="Terminate" selected="true"/>
		</s:VGroup>
		<s:HGroup width="100%" horizontalAlign="center" gap="50" paddingTop="25">
			<s:Button label="OK" click="okButton_clickHandler(event)"/>
			<s:Button label="Cancel" click="cancel_clickHandler(event)"/>
		</s:HGroup>
	</s:VGroup>

</s:TitleWindow>
