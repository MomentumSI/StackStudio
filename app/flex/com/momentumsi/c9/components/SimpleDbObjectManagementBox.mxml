<?xml version="1.0" encoding="utf-8"?>
<c9:ObjectManagementDetailsBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
							   xmlns:s="library://ns.adobe.com/flex/spark" 
							   xmlns:mx="library://ns.adobe.com/flex/mx"
							   xmlns:c9="com.momentumsi.c9.components.*" 
							   xmlns:services="com.momentumsi.c9.services.*">
	
	<fx:Script>
		<![CDATA[
			import com.maccherone.json.JSON;
			import com.momentumsi.c9.representers.SimpleDBRepresenter;
			import com.momentumsi.c9.services.CloudApiService;
			import com.momentumsi.c9.utils.Helpers;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.IndexChangedEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			[Bindable]
			private var sdbData:SimpleDBRepresenter;
			[Bindable]
			private var sdbContentList:ArrayCollection = new ArrayCollection();
			
			override public function set resourceData(value:Object):void
			{
				sdbData = new SimpleDBRepresenter(value);
				super.resourceData = sdbData;
				sdbDetails.selectedIndex = 0;
				getContentList();
			}
			
			private function getContentList():void
			{
				refreshContentList();
			}

			protected function delete_clickHandler(event:MouseEvent):void
			{
				var destroyPopUp:DestroyResourceObjectManagement = DestroyResourceObjectManagement(PopUpManager.createPopUp(UIComponent(this.parentApplication), DestroyResourceObjectManagement, true));
				destroyPopUp.cloudAccountId = cloudAccount.id;
				destroyPopUp.region = region;
				destroyPopUp.resourceType = CloudApiService.SIMPLE_DB_SERVICE;
				destroyPopUp.resourceDisplayId = sdbData.name;
				destroyPopUp.resourceId = sdbData.name;
			}
			
			private function refreshContentList():void
			{
				getSdbContents.send();
				itemsViewStack.selectedChild = loading;
			}
			
			protected function getSdbContents_resultHandler(event:ResultEvent):void
			{
				
				var itemsResult:Object = getSdbContents.result;
				sdbContentList.removeAll();
				for each(var item:Object in itemsResult)
				{
					var itemObject:Object = new Object();
					itemObject["Name"] = item.Name;
					for each(var attribute:Object in item.Attributes)
					{
						//Check if Column already exists
						var found:Boolean = false;
						for each(var column:GridColumn in itemGridColumns)
						{
							if(!found && column.dataField == attribute.Name)
							{
								found = true;
							}
						}
						
						//If Column does not exist, then add it
						if(!found)
						{
							var newColumn:GridColumn = new GridColumn();
							newColumn.headerText = attribute.Name;
							newColumn.dataField = attribute.Name;
							itemGridColumns.addItem(newColumn);
						}
						
						itemObject[attribute.Name] = attribute.Value
					}
					sdbContentList.addItem(itemObject);
				}
				
				if(sdbContentList.length > 0)
				{
					itemsViewStack.selectedChild = items;
				}else
				{
					itemsViewStack.selectedChild = noItems;
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<services:CloudApiService id="getSdbContents"
								  cloudAccountId="{cloudAccount.id}"
								  region="{region}"
								  action="list_sdb_content"
								  serviceType="{CloudApiService.SIMPLE_DB_SERVICE}"
								  request="{{physical_id: sdbData.name}}"
								  result="getSdbContents_resultHandler(event)"/>
	</fx:Declarations>
	
	<s:HGroup paddingLeft="10" gap="20">
		<c9:TextButton text="Delete Domain" click="delete_clickHandler(event)"/>
	</s:HGroup>
	<s:BorderContainer height="100%" width="100%" alpha="1" borderVisible="false">
		<mx:TabNavigator id="sdbDetails" width="100%" height="100%">
			<s:NavigatorContent label="Details" width="100%" height="100%">
				<s:BorderContainer borderVisible="false"  id="details" height="100%" width="100%">
					<s:Scroller width="100%" height="100%">
						<s:viewport>
							<s:HGroup>
								<s:Form>
									<s:layout>
										<s:FormLayout gap="-7"/>
									</s:layout>
									<s:FormItem label="Name:">
										<mx:Text text="{sdbData.name}"/>
									</s:FormItem>
									<s:FormItem label="Item Count:">
										<mx:Text text="{sdbData.itemCount}"/>
									</s:FormItem>
									<s:FormItem label="Item Names Size:">
										<mx:Text text="{sdbData.itemNamesSizeBytes} bytes"/>
									</s:FormItem>
									<s:FormItem label="Attribute Name Count:">
										<mx:Text text="{sdbData.attributeNameCount}"/>
									</s:FormItem>
									<s:FormItem label="Attribute Names Size:">
										<mx:Text text="{sdbData.attributeNamesSizeBytes} bytes"/>
									</s:FormItem>
									<s:FormItem label="Attribute Value Count:">
										<mx:Text text="{sdbData.attributeValueCount}"/>
									</s:FormItem>
									<s:FormItem label="Attribute Values Size:">
										<mx:Text text="{sdbData.attributeValuesSizeBytes} bytes"/>
									</s:FormItem>
								</s:Form>
							</s:HGroup>
						</s:viewport>
					</s:Scroller>
				</s:BorderContainer>
			</s:NavigatorContent>
			<s:NavigatorContent label="Items" width="100%" height="100%">
				<mx:ViewStack id="itemsViewStack" width="100%" height="100%">
					<s:NavigatorContent id="loading" width="100%" height="100%">
						<s:BusyIndicator width="50" height="50"/>
					</s:NavigatorContent>
					<s:NavigatorContent id="items" width="100%" height="100%">
						<s:VGroup width="100%" height="100%" paddingLeft="10" paddingRight="10">
							<s:DataGrid id="itemsDataGrid" width="100%" height="100%" dataProvider="{sdbContentList}" selectionMode="singleRow" variableRowHeight="true">
								<s:columns>
									<s:ArrayCollection id="itemGridColumns">
										<s:GridColumn headerText="Item Name" dataField="Name"/>
									</s:ArrayCollection>
								</s:columns>
							</s:DataGrid>
						</s:VGroup>
					</s:NavigatorContent>
					<s:NavigatorContent id="noItems" width="100%" height="100%">
						<s:VGroup width="100%" height="100%" paddingLeft="10" paddingRight="10">
							<mx:Text text="This domain is empty"/>
						</s:VGroup>
					</s:NavigatorContent>
				</mx:ViewStack>
			</s:NavigatorContent>
		</mx:TabNavigator>
	</s:BorderContainer>
</c9:ObjectManagementDetailsBox>