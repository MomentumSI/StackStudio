<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   width="326" height="172"
			   title="Delete Load Balancer"
			   move="Helpers.doMove(this)"
			   creationComplete="creationCompleteHandler(event)"
			   close="PopUpManager.removePopUp(this)" xmlns:uicomponent="fr.kapit.diagrammer.base.uicomponent.*">
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.components.MainBox;
			import com.momentumsi.c9.utils.Helpers;
			
			import fr.kapit.diagrammer.Diagrammer;
			
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			[Bindable]
			private var loadBalancerId:int;
			private var mainBox:MainBox;
			
			protected function deleteButton_clickHandler(event:MouseEvent):void
			{
				loadBalancerId = loadBalancer['id'];
				deleteLoadBalancerSvc.send();
				PopUpManager.removePopUp(this);
				var time:Date = new Date();
				var name:String = loadBalancer['data'].child('name');
				mainBox.runningView.cloudEvents.addItem({time: time.toUTCString(), 
					type: "INFO", 
					details: "Load Balancer '" + name + "' has been deleted.",
					id: name});
			}
			
			protected function deleteLoadBalancerSvc_resultHandler(event:ResultEvent):void
			{
				for each (var lb:Object in loadBalancersRunningCollection)
				{
					var objId:int = lb['id']
					var id:int = loadBalancer['id'];
					if(objId == id)
					{
						loadBalancersRunningCollection.removeItemAt(loadBalancersRunningCollection.getItemIndex(lb));
					}
				}
				
				var runningDiagram:Diagrammer = Helpers.getRunningDiagram(this);
				runningDiagram.removeNodeElement(loadBalancer['node'].itemID);
								
				var mainBox:MainBox = Helpers.getMainBox(this);
				var loadBalancerObjects:ArrayCollection = mainBox.leftMenu.loadBalancers;
				var result:XML = event.result as XML;
				var index:int = loadBalancerObjects.length;
				loadBalancerObjects.addItemAt({label: result.child('name'), data: result}, index);
				mainBox.runningView.runningObjectDescriptions.selectedIndex = 0;
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				PopUpManager.centerPopUp(this);
				mainBox = Helpers.getMainBox(this);
			}
			
			protected function deleteLoadBalancerSvc_faultHandler(event:FaultEvent):void
			{
				trace(event.message);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<fx:Object id="loadBalancer"/>
		<s:ArrayCollection id="loadBalancersRunningCollection"/>
		
		<s:HTTPService id="deleteLoadBalancerSvc"
					   url="{Helpers.getHost()}/load_balancers/delete_load_balancer/{loadBalancerId}.xml"
					   method="GET"
					   resultFormat="e4x"
					   showBusyCursor="true"
					   result="deleteLoadBalancerSvc_resultHandler(event)"
					   fault="deleteLoadBalancerSvc_faultHandler(event)"/>
		

	</fx:Declarations>
		<mx:Text paddingLeft="15" x="0" y="14" text="Are you sure you want to delete the following{'\n'} load balancer?"/>
		<mx:Text paddingLeft="15" x="10" y="40" text=" - {loadBalancer.child('name')}"/>
		<s:Line y="-84" width="290" horizontalCenter="-5" xFrom="5" xTo="150" yFrom="180"
				yTo="180">
			<s:stroke>
				<s:SolidColorStroke color="white"/>
			</s:stroke>
		</s:Line>
	<s:HGroup x="154" y="105">
		<s:Button label="Cancel" click="PopUpManager.removePopUp(this)"/>
		<s:Button label="Delete" click="deleteButton_clickHandler(event)"/>
	</s:HGroup>
</s:TitleWindow>
