<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx" 
			   title="Delete Application"
			   close="PopUpManager.removePopUp(this)"
			   creationComplete="deleteWindow_creationCompleteHandler(event)"
			   width="476" height="334">
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.utils.Helpers;
			
			import fr.kapit.diagrammer.Diagrammer;
			import fr.kapit.diagrammer.base.uicomponent.DiagramSprite;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var beanstalkAppId:int;
			[Bindable]
			private var host:String;
			private var nodeId:String;
			[Bindable]
			private var beanstalkAppData:XML;
			
			protected function deleteWindow_creationCompleteHandler(event:FlexEvent):void
			{
				PopUpManager.centerPopUp(this);
				beanstalkAppData = beanstalkApp['data'];
			}
			
			protected function deleteButton_clickHandler(event:MouseEvent):void
			{
				host = Helpers.getHost();
				
				beanstalkAppId = beanstalkApp['id'];
				deleteBeanstalkAppFromCloudSvc.send();
				PopUpManager.removePopUp(this);
				
			}

			
			protected function deleteBeanstalkAppFromCloudSvc_resultHandler(event:ResultEvent):void
			{
				beanstalkAppsRunningCollection.removeItemAt(beanstalkAppsRunningCollection.getItemIndex(beanstalkApp));
				
				var runningDiagram:Diagrammer = Helpers.getRunningDiagram(this);
				runningDiagram.removeNodeElement(beanstalkApp['node'].itemID);				
				
				var mainBox:MainBox = Helpers.getMainBox(this);
				var beanstalkAppObjects:ArrayCollection = mainBox.leftMenu.beanstalkApps;
				var result:XML = event.result as XML;
				var index:int = beanstalkAppObjects.length;
				beanstalkAppObjects.addItemAt({label: result.child('name'), data: result}, index);
				
			}
		
			protected function deleteBeanstalkAppFromCloudSvc_faultHandler(event:FaultEvent):void
			{
				Alert.show('We are experiencing problems with our Elastic Beanstalk service at this time and were unable to successfully delete your application.  By selecting "Yes", there will be no copy saved with regards to this application.  Would you still like to remove it from the workspace?', "Delete Error", (Alert.YES | Alert.NO), null, removeNodeHandler); 
				trace(event.message);
			}
			
			private function removeNodeHandler(event:CloseEvent):void
			{
				if (event.detail == Alert.YES)
				{
					deleteAppFromDbSvc.send({_method: "DELETE"});
				}else{
					return;
				}
				
			}
			
			protected function deleteAppFromDbSvc_resultHandler(event:ResultEvent):void
			{
				beanstalkAppsRunningCollection.removeItemAt(beanstalkAppsRunningCollection.getItemIndex(beanstalkApp));
				
				var runningDiagram:Diagrammer = Helpers.getRunningDiagram(this);
				runningDiagram.removeNodeElement(beanstalkApp['node'].itemID);				
				
			}
			
			protected function deleteAppFromDbSvc_faultHandler(event:FaultEvent):void
			{
				Alert.show('There was an issue while connecting to our database and your application was unable to be removed.', "Connection Error");
				trace(event.message);
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		
		<s:HTTPService id="deleteBeanstalkAppFromCloudSvc"
					   url="{host}/elastic_beanstalk_apps/delete_application/{beanstalkAppId}.xml"
					   resultFormat="e4x"
					   method="GET"
					   showBusyCursor="true"
					   result="deleteBeanstalkAppFromCloudSvc_resultHandler(event)"
					   fault="deleteBeanstalkAppFromCloudSvc_faultHandler(event)"/>
		
		<s:HTTPService id="deleteAppFromDbSvc"
					   url="{host}/elastic_beanstalk_apps/{beanstalkAppId}.xml"
					   resultFormat="e4x"
					   method="POST"
					   showBusyCursor="true"
					   result="deleteAppFromDbSvc_resultHandler(event)"
					   fault="deleteAppFromDbSvc_faultHandler(event)"/>
		
		<fx:Object id="beanstalkApp"/>
		<s:ArrayCollection id="beanstalkAppsRunningCollection"/>
	</fx:Declarations>
	<s:TextArea y="5" width="95%" height="123" color="red" horizontalCenter="0" selectable="false"
				text="Deleting the {beanstalkAppData.child('name')} application will terminate all running environments and delete all versions! {'\n'}{'\n'}Your versions will not be deleted from S3.  To do this, please terminate any running environments and manually delete the versions before deleting the application.  Make sure 'Delete versions from S3' is selected when you delete the version."
				textAlign="justify"/>
	
	<mx:Text x="10" y="147"
			 width="95%"
			 text="This will only affect environments and versions associated with this application.  Do you want to terminate all environments, delete all versions, and remove the application?"/>			
	<s:HGroup x="304" y="257">
		<s:Button id="deleteButton" label="Delete" click="deleteButton_clickHandler(event)"/>
		<s:Button label="Cancel" click="PopUpManager.removePopUp(this)"/>
	</s:HGroup>
</s:TitleWindow>
