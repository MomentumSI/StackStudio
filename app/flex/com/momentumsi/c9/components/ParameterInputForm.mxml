<?xml version="1.0" encoding="utf-8"?>
<s:Form xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%"
		 creationComplete="creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.models.Parameter;
			
			import mx.collections.ArrayCollection;
			import mx.controls.ComboBox;
			import mx.controls.Text;
			import mx.events.FlexEvent;
			
			import spark.components.FormItem;
			import spark.components.TextInput;
			import spark.components.VGroup;
			
			public var templateParameters:ArrayCollection = new ArrayCollection();
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				var parameterFormItem:FormItem;
				var itemGroup:VGroup;
				var formItemDescription:Text;
				var paramDescription:String;
				var paramComboBox:ComboBox;
				var paramComboBoxData:ArrayCollection;
				var paramInput:TextInput;
				var noParams:Boolean = true;
				
				for each(var parameter:Parameter in templateParameters)
				{
					noParams = false;
					
					parameterFormItem = new FormItem();
					parameterFormItem.label = parameter.name + ":";
					
					if(parameter.allowedValuesCollection .length > 0)
					{
						paramComboBox = new ComboBox();
						paramComboBox.dataProvider = parameter.allowedValuesCollection;
						var defaultIndex:int;
						for each(var value:Object in parameter.allowedValuesCollection){							
							if(value.toString() == parameter.defaultValue)
							{
								paramComboBox.selectedItem = value;
							}
						}
						parameterFormItem.addElement(paramComboBox);
						
					}else{
						paramInput = new TextInput();
						paramInput.width = 250;
						if(parameter.defaultValue != null)
						{
							paramInput.text = parameter.defaultValue;
						}
						if(parameter.noEcho)
						{
							paramInput.displayAsPassword = true;
						}
						parameterFormItem.addElement(paramInput);
					}
					
					formItemDescription = new Text();
					formItemDescription.width = 750;
					formItemDescription.text = "\t" + parameter.description
					
					itemGroup = new VGroup();
					itemGroup.gap = -7;
					parameterFormItem.required = true;
					itemGroup.addElement(parameterFormItem);
					if(!(formItemDescription.text == "\tnull" || formItemDescription.text == '\tundefined' || formItemDescription.text == "\t"))
					{
						itemGroup.addElement(formItemDescription);
					}
					
					this.addElement(itemGroup);
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		
	</fx:Declarations>
</s:Form>
