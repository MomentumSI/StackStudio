<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="540" height="188"
		 title="Create Security Group"
		 creationComplete="init(event)"
		 close="closeHandler()"
		 move="Helpers.doMove(this)" 
		 xmlns:components="com.momentumsi.c9.components.*" 
		 xmlns:rds="com.momentumsi.c9.components.rds.*"
		 xmlns:services="com.momentumsi.c9.services.*">
	<fx:Metadata>
		[Event(name="createDBSecurityGroupResult", type="com.momentumsi.c9.events.rds.CreateDBSecurityGroupResultEvent")]
		[Event(name="createSecurityGroupResult", type="com.momentumsi.c9.events.compute.CreateSecurityGroupResultEvent")]
		[Event(name="createCacheSecurityGroupResult", type="com.momentumsi.c9.events.cache.CreateCacheSecurityGroupResultEvent")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.events.cache.CreateCacheSecurityGroupFaultEvent;
			import com.momentumsi.c9.events.cache.CreateCacheSecurityGroupResultEvent;
			import com.momentumsi.c9.events.compute.CreateSecurityGroupFaultEvent;
			import com.momentumsi.c9.events.compute.CreateSecurityGroupResultEvent;
			import com.momentumsi.c9.events.rds.CreateDBSecurityGroupFaultEvent;
			import com.momentumsi.c9.events.rds.CreateDBSecurityGroupResultEvent;
			import com.momentumsi.c9.services.CloudApiService;
			import com.momentumsi.c9.utils.Helpers;
			
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.events.MoveEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			public var cloudAccountId:String;
			[Bindable]
			public var region:String;
			
			public var serviceType:String;
			
			protected function init(event:FlexEvent):void
			{
				PopUpManager.centerPopUp(this);
			}
			
			protected function closeHandler():void
			{
				PopUpManager.removePopUp(this);	
			}
			
			protected function submitButton_clickHandler(event:MouseEvent):void
			{
				if(securityGroupName.text.replace(/\s/g,"") != "" && securityGroupDescrip.text.replace(/\s/g,"") != "")
				{
					var name:String = securityGroupName.text;
					var descrip:String = securityGroupDescrip.text;
					switch(serviceType)
					{
						case CloudApiService.EC2_SERVICE:
							ec2Service.createSecurityGroup(name, descrip);
							break;
						case CloudApiService.RDS_SERVICE:
							rdsService.createDbSecurityGroup(name, descrip);
							break;
						case CloudApiService.CACHE_SERVICE:
							cacheService.createCacheSecurityGroup(name, descrip);
							break;
					}
					submitButton.label = "Creating";
					submitButton.enabled = false;
				}else
					Alert.show("Name and Description are required for creation.");
			}
			
			protected function createSecurityGroup_resultHandler(event:ResultEvent):void
			{
				switch(serviceType)
				{
					case CloudApiService.EC2_SERVICE:
						dispatchEvent(new CreateSecurityGroupResultEvent(event.result));
						break;
					case CloudApiService.RDS_SERVICE:
						dispatchEvent(new CreateDBSecurityGroupResultEvent(event.result));
						break;
					case CloudApiService.CACHE_SERVICE:
						dispatchEvent(new CreateCacheSecurityGroupResultEvent(event.result));
						break;
				}
				
				PopUpManager.removePopUp(this);
			}
			
			protected function createSecurityGroup_faultHandler(event:FaultEvent):void
			{
				submitButton.label = "Create";
				submitButton.enabled = true;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<services:RdsService id="rdsService"
							 cloudAccountId="{cloudAccountId}"
							 region="{region}"
							 createDBSecurityGroupResult="createSecurityGroup_resultHandler(event)"
							 createDBSecurityGroupFault="createSecurityGroup_faultHandler(event)"/>
		
		<services:Ec2Service id="ec2Service"
							 cloudAccountId="{cloudAccountId}"
							 region="{region}"
							 createSecurityGroupResult="createSecurityGroup_resultHandler(event)"
							 createSecurityGroupFault="createSecurityGroup_faultHandler(event)"/>
		
		<services:ElcService id="cacheService"
							 cloudAccountId="{cloudAccountId}"
							 region="{region}"
							 createCacheSecurityGroupResult="createSecurityGroup_resultHandler(event)"
							 createCacheSecurityGroupFault="createSecurityGroup_faultHandler(event)"/>
							 
	</fx:Declarations>
	
	<s:VGroup height="100%" width="100%">
		<s:HGroup height="100%" width="100%" horizontalAlign="center">
			<s:Form height="113" width="100%" fontSize="13" defaultButton="{submitButton}">
				<s:FormItem label="Name:*" width="100%">
					<s:TextInput id="securityGroupName" width="50%"/>
				</s:FormItem>
				<s:FormItem label="Description:*" width="100%">
					<s:TextInput id="securityGroupDescrip" width="100%"/>
				</s:FormItem>
			</s:Form>
		</s:HGroup>
		<s:HGroup width="100%" horizontalAlign="center" paddingBottom="10">
			<s:Button id="submitButton" label="Create" click="submitButton_clickHandler(event)"/>
			<s:Button id="cancelButton" label="Cancel" click="closeHandler()"/>
		</s:HGroup>
	</s:VGroup>
</s:TitleWindow>
