<?xml version="1.0" encoding="utf-8"?>
<components:CustomTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
							  xmlns:s="library://ns.adobe.com/flex/spark" 
							  xmlns:mx="library://ns.adobe.com/flex/mx" 
							  xmlns:components="com.momentumsi.c9.components.*"
							  creationComplete="customtitlewindow1_creationCompleteHandler(event)"
							  title="Spot Price History"
							  width="922" height="418">
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.constants.InstanceTypes;
			import com.momentumsi.c9.events.compute.DescribeSpotPriceHistoryResultEvent;
			import com.momentumsi.c9.representers.SpotPrice;
			import com.momentumsi.c9.services.Ec2Service;
			
			import mx.charts.series.LineSeries;
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.events.IndexChangeEvent;
			[Bindable]
			public var computeService:Ec2Service;
			[Bindable]
			public var availabilityZones:ArrayCollection = new ArrayCollection([{zoneName: "All Zones"}]);
			
			protected function customtitlewindow1_creationCompleteHandler(event:FlexEvent):void
			{
				var filters:Object = getFilters();
				computeService.addEventListener(DescribeSpotPriceHistoryResultEvent.RESULT, describeSpotPriceHistory_resultHandler);
				computeService.describeSpotPriceHistory(filters);
			}
			
			private function describeSpotPriceHistory_resultHandler(event:DescribeSpotPriceHistoryResultEvent):void
			{
				var priceHash:Object = new Object();
				var timeRange:Date = getTimeRange();
				for each(var price:SpotPrice in computeService.spotPriceHistory)
				{
					if(price.timestamp > timeRange)
					{
						if(priceHash.hasOwnProperty(price.availabilityZone))
						{
							(priceHash[price.availabilityZone] as ArrayCollection).addItem(price);
						}else{
							priceHash[price.availabilityZone] = new ArrayCollection();
							(priceHash[price.availabilityZone] as ArrayCollection).addItem(price);
						}
					}
				}
				
				
				
				var ls:LineSeries;
				priceChart.series = [];
				var index:int = 0;
				for(var p:* in priceHash)
				{
					ls = new LineSeries();
					ls.yField = "spotPrice";
					ls.xField = "timestamp";
					ls.setStyle("form", "step");
					ls.displayName = p;
					ls.dataProvider = priceHash[p];
					priceChart.dataProvider = priceHash[p];
					priceChart.series.push(ls);
				}
			}
			
			protected function filter_changeHandler(event:IndexChangeEvent):void
			{
				var filters:Object = getFilters();
				computeService.describeSpotPriceHistory(filters);
			}
			
			private function getFilters():Object
			{
				var defaultFilter:Object = new Object();
				defaultFilter["instance-type"] = instanceTypeDDL.selectedItem;
				defaultFilter["product-description"] = productDDL.selectedItem;
				//defaultFilter["timestamp"] = getTimestamp();
				if(zoneDDL.selectedIndex != 0)
				{
					defaultFilter["availability-zone"] = zoneDDL.selectedItem.zoneName;
				}
				return defaultFilter;
			}
			
			private function getTimeRange():Date
			{
				var date:Date;
				var today:Date = new Date();
				var offsetDay:int = 1000*60*60*24; //milliseconds in one day
				
				switch(dateRangeDDL.selectedIndex)
				{
					case 0:
						date = new Date(today.getTime() - offsetDay);
						break;
					case 1:
						date = new Date(today.getTime() - (offsetDay*7));
						break;
					case 2:
						date = new Date(today.getTime() - (offsetDay*30));
						break;
					case 3:
						date = new Date(today.getTime() - (offsetDay*90));
						break;
				}
				
				return date;
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:ArrayList id="lineColors">
			<s:SolidColorStroke id="sc1" color="blue" alpha=".3"/>
			<s:SolidColorStroke id="sc2" color="green" alpha=".3"/>
			<s:SolidColorStroke id="sc3" color="yellow" alpha=".3"/>
			<s:SolidColorStroke id="sc4" color="red" alpha=".3"/>
		</s:ArrayList>
		<s:DateTimeFormatter id="dateFormatter"
							 dateTimePattern="yyy-MM-dd'T'HH:mm:ss'000Z'"
							 useUTC="true"/>
	</fx:Declarations>
	<s:HGroup width="100%" gap="-20">
		<s:FormItem label="Product:">
			<s:DropDownList id="productDDL"
							selectedIndex="0"
							change="filter_changeHandler(event)"
							width="158">
				<s:dataProvider>
					<s:ArrayCollection>
						<fx:String>Linux/UNIX</fx:String>
						<fx:String>Windows</fx:String>
						<fx:String>SUSE Linux</fx:String>
					</s:ArrayCollection>
				</s:dataProvider>
			</s:DropDownList>
		</s:FormItem>
		<s:FormItem label="Instance Type:">
			<s:DropDownList id="instanceTypeDDL"
							selectedIndex="0"
							change="filter_changeHandler(event)"
							dataProvider="{InstanceTypes.AWS_SUPPORTED_TYPES}"/>
		</s:FormItem>
		<s:FormItem label="Date Range:">
			<s:DropDownList id="dateRangeDDL"
							selectedIndex="0"
							change="filter_changeHandler(event)">
				<s:dataProvider>
					<s:ArrayCollection>
						<fx:String>1 day</fx:String>
						<fx:String>1 week</fx:String>
						<fx:String>1 month</fx:String>
						<fx:String>3 months</fx:String>
					</s:ArrayCollection>
				</s:dataProvider>
			</s:DropDownList>
		</s:FormItem>
		<s:FormItem label="Zone:">
			<s:DropDownList id="zoneDDL"
							labelField="zoneName"
							selectedIndex="0"
							change="filter_changeHandler(event)"
							dataProvider="{availabilityZones}"/>
		</s:FormItem>
	</s:HGroup>
	<mx:LineChart id="priceChart"
				  x="53" y="53" 
				  showDataTips="true"
				  width="832" height="276">
		<mx:horizontalAxis>
			<mx:CategoryAxis id="chartAxis" categoryField="timestamp"/>
		</mx:horizontalAxis>
		
	</mx:LineChart>
	<mx:Legend x="779" y="53" dataProvider="{priceChart}"/>
</components:CustomTitleWindow>
