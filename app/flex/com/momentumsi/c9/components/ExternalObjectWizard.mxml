<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 close="PopUpManager.removePopUp(this)"
		 creationComplete="creationCompleteHandler(event)"
		 title="External Object Wizard"
		 move="Helpers.doMove(this)"
		 width="425" height="290"
		 xmlns:diagrammer="fr.kapit.diagrammer.base.uicomponent.*">
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.utils.Helpers;
			
			import fr.kapit.diagrammer.Diagrammer;
			
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			public var accountId:int;	
			[Bindable]
			private var projectId:int;
			[Bindable]
			private var host:String;
			[Bindable]
			public var configure:int = 0;
			private var app:Object = FlexGlobals.topLevelApplication;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				PopUpManager.centerPopUp(this);
				host = app.GetConfiguration( "serviceUrl" ) ;
				accountId = Helpers.currentAccount(this);
				projectId = Helpers.currentProject(this);
				objectName.setFocus();
				if(configure==1 && externalObject != "")
				{
					objectName.text = externalObject.child('name').toString();
					objectDescrip.text = externalObject.child('description').toString();
					objectPorts.text = externalObject.child('object-ports').toString();
				}
			}
			
			protected function save_clickHandler(event:MouseEvent):void
			{
				if(objectName.text != "" && objectDescrip.text != "" && objectPorts.text != "")
				{
					if(configure == 1)
					{
						editExternalObjectSvc.send({name: objectName.text, description: objectDescrip.text, ports: objectPorts.text});
					}
					else
					{
						createExternalObjectSvc.send();
						PopUpManager.removePopUp(this);
					}
				}else
					Alert.show("All fields are required.");
			}
			
			protected function createExternalObjectSvc_resultHandler(event:ResultEvent):void
			{
				var result:XML = event.result as XML;
				node.data = result;
				
				PopUpManager.removePopUp(this);
				
			}
			
			protected function editExternalObjectSvc_resultHandler(event:ResultEvent):void
			{
				var result:XML = event.result as XML;
				var designDiagram:Diagrammer = Helpers.getDesignDiagram(this);
				for each ( var nodeCheck:DiagramSprite in designDiagram.nodesMap )
				{
					var nodeData:XML = nodeCheck.data as XML;
					if(nodeData.name() == 'external-object')
					{
						if ( nodeData.child('id') == result.child('id') )
						{
							nodeCheck.data = result;
						}
					}
				}
				PopUpManager.removePopUp(this);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:XML id="externalObject"/>
		<diagrammer:DiagramSprite id="node"/>
		
		<s:HTTPService id="editExternalObjectSvc"
					   url="{Helpers.getHost()}/external_objects/edit_external_object/{externalObject.child('id')}.xml"
					   method="GET"
					   resultFormat="e4x"
					   showBusyCursor="true"
					   result="editExternalObjectSvc_resultHandler(event)"/>
		
		<s:HTTPService id="createExternalObjectSvc"
					   url="{host}/external_objects.xml"
					   contentType="application/xml"
					   resultFormat="e4x"
					   method="POST"
					   showBusyCursor="true"
					   result="createExternalObjectSvc_resultHandler(event)">
			<s:request>
				<external_object>
					<name>{objectName.text}</name>
					<description>{objectDescrip.text}</description>
					<object_ports>{objectPorts.text}</object_ports>	
					<project_id>{projectId}</project_id>
				</external_object>
			</s:request>
		</s:HTTPService>
	</fx:Declarations>
	<s:Form textAlign="right">
		<s:FormItem width="428" label="Name:*">
			<s:TextInput id="objectName" width="150" textAlign="left"/>
		</s:FormItem>
		<s:FormItem width="428" label="Description:*">
			<s:TextArea id="objectDescrip" width="275" height="64" textAlign="left"/>
		</s:FormItem>
		<s:FormItem width="428" label="Ports:*">
			<mx:HBox>
				<s:TextInput id="objectPorts" width="150" textAlign="left"/>
				<s:Label height="100%" text="(e.g. 80, 22, 8080)" verticalAlign="middle" textAlign="left"/>
			</mx:HBox>
		</s:FormItem>
	</s:Form>
	<s:Button x="139" y="226" label="Save" click="save_clickHandler(event)"/>
	<s:Button x="216" y="226" label="Cancel" click="PopUpManager.removePopUp(this)"/>
</s:TitleWindow>
