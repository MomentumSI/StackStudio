<?xml version="1.0" encoding="utf-8"?>
<components:CustomTitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
							  xmlns:s="library://ns.adobe.com/flex/spark"
							  xmlns:mx="library://ns.adobe.com/flex/mx"
							  xmlns:models="com.momentumsi.c9.models.*"
							  xmlns:components="com.momentumsi.c9.components.*"
							  width="842" height.BasicView="498" height.DetailedView="482"
							  creationComplete="creationCompleteHandler(event)"
							  currentState="BasicView" title="Audit Trails">
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.models.AuditLog;
			import com.momentumsi.c9.models.CloudAccount;
			import com.momentumsi.c9.models.User;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			[Bindable]
			private var userAuditLogs:ArrayCollection = new ArrayCollection();
			public var currentUser:User;
			[Bindable]
			private var logError:Object = new Object();
			[Bindable]
			private var logParameters:ArrayCollection = new ArrayCollection();
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				currentUser.updateUser();
				currentUser.addEventListener(User.CLOUD_ACCOUNTS_UPDATED, userRefresh_handler);
			}
			
			private function userRefresh_handler(event:Event):void
			{
				userAuditLogs.removeAll();
				for each(var cloudAccount:CloudAccount in currentUser.cloud_accounts)
				{
					userAuditLogs.addAll(cloudAccount.auditLogs);
				}
			}
			
			protected function detailedViewCB_changeHandler(event:Event):void
			{
				if(detailedViewCB.selected)
				{
					currentState = "DetailedView"; 
				}else{
					currentState = "BasicView";
				}
			}
			
			protected function auditLogsGrid_valueCommitHandler(event:FlexEvent):void
			{
				var auditLog:AuditLog = auditLogsGrid.selectedItem as AuditLog; 
				logError = auditLog.errors;
				logParameters = auditLog.parameters;
			}
			
		]]>
	</fx:Script>
	<components:states>
		<s:State name="BasicView"/>
		<s:State name="DetailedView"/>
	</components:states>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:ArrayCollection id="filterCollection">
			<fx:Object data="accountName" label="Account Name"/>
			<fx:Object data="physicalResourceId" label="Physical Id"/>
			<fx:Object data="logicalResourceId" label="Logical Name"/>
			<fx:Object data="serviceType" label="Service"/>
			<fx:Object data="action" label="Action"/>
			<fx:Object data="responseStatusCode" label="Response Code"/>
			<fx:Object data="date" label="Date"/>
		</s:ArrayCollection>
	</fx:Declarations>
	<s:VGroup id="mainGroup"
			  paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10"
			  width="100%">
		<s:HGroup id="filterHG"
				  verticalAlign="middle">
			<s:Label id="filterLabel"
					 text="Filter By:"/>
			<components:ListFilter id="auditLogFilter"
								   listDataProvider="{userAuditLogs}"
								   filterCollection="{this.filterCollection}">
			</components:ListFilter>
		</s:HGroup>
		<s:Scroller width="100%" height.BasicView="378"
					height.DetailedView="163">
			<s:VGroup>
				<s:DataGrid id="auditLogsGrid"
							width="1150" 
							dataProvider="{userAuditLogs}"
							valueCommit="auditLogsGrid_valueCommitHandler(event)"
							requestedMaxRowCount.BasicView="14" requestedMinRowCount.BasicView="14" requestedRowCount.BasicView="14"
							requestedMaxRowCount.DetailedView="5" requestedMinRowCount.DetailedView="5" requestedRowCount.DetailedView="5">
					<s:columns>
						<s:ArrayList>
							<s:GridColumn headerText="Account Name" dataField="accountName" width="150"/>
							<s:GridColumn headerText="Physical Id" dataField="physicalResourceId" width="150"/>
							<s:GridColumn headerText="Logical Name" dataField="logicalResourceId" width="150"/>
							<s:GridColumn headerText="Service" dataField="serviceType" width="80"/>
							<s:GridColumn headerText="Action" dataField="action" width="180"/>
							<s:GridColumn headerText="Response Code" dataField="responseStatusCode" width="130"/>
							<s:GridColumn headerText="Date" dataField="date"/>
						</s:ArrayList>
					</s:columns>
				</s:DataGrid>
			</s:VGroup>
		</s:Scroller>
		<s:HGroup includeIn="DetailedView" width="100%" height="200">
			<s:DataGrid id="parametersGrid"
						width="321" height="100%"
						dataProvider="{logParameters}"
						requestedMaxRowCount="7" requestedMinRowCount="7" requestedRowCount="7">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn dataField="name" headerText="Parameter Name"></s:GridColumn>
						<s:GridColumn dataField="value" headerText="Parameter Value"></s:GridColumn>
					</s:ArrayList>
				</s:columns>
				<s:typicalItem>
					<fx:Object name="ParamKey" value="ParamVal"></fx:Object>
				</s:typicalItem>
			</s:DataGrid>
			<s:Form id="errorDetailsForm"
					width="436">
				<s:FormHeading id="errorDetailsFormHeading"
							   label="Error Details:"/>
				<s:FormItem label="Type:">
					<s:Label id="errorType"
							 width="280"
							 text="{logError.title}"/>
				</s:FormItem>
				<s:FormItem label="Message:">
					<s:Label id="errorMessage"
							 width="294" 
							 text="{logError.message}"/>
				</s:FormItem>
				<s:FormItem label="Code:">
					<s:Label id="errorCode"
							 text="{logError.code}"/>
				</s:FormItem>
			</s:Form>
		</s:HGroup>
		<!--<s:TextArea editable="false" text="{AuditLog(auditLogsGrid.selectedItem).parameters}"/>-->
		<s:HGroup width="100%" horizontalAlign="right">
			<s:HGroup width="100%" horizontalAlign="left">
				<s:CheckBox id="detailedViewCB"
							fontWeight="bold"
							label="Show Details"
							change="detailedViewCB_changeHandler(event)"
							selected="false"/>
			</s:HGroup>
			<s:HGroup width="100%" horizontalAlign="right">
				<s:Button label="Close" click="PopUpManager.removePopUp(this)"/>
			</s:HGroup>
		</s:HGroup>
	</s:VGroup>
</components:CustomTitleWindow>
