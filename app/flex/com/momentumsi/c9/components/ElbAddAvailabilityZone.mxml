<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="400" height="300"
		 title="Add Availability Zone"
		 creationComplete="creationCompleteHandler(event)"
		 close="PopUpManager.removePopUp(this)" xmlns:services="com.momentumsi.c9.services.*">
	<fx:Script>
		<![CDATA[
			import com.maccherone.json.JSON;
			import com.momentumsi.c9.models.CloudAccount;
			import com.momentumsi.c9.utils.Helpers;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			public var elbData:Object;
			[Bindable]
			private var availabilityZoneList:ArrayCollection = new ArrayCollection();
			[Bindable]
			public var cloudAccountId:String;
			[Bindable]
			public var region:String;
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				PopUpManager.centerPopUp(this);
				getAvailabilityZonesSvc.send();
			}
			
			protected function getAvailabilityZonesSvc_resultHandler(event:ResultEvent):void
			{		
				availabilityZoneList.removeAll();
				if(getAvailabilityZonesSvc.result != null)
				{
					for each(var zone:Object in getAvailabilityZonesSvc.result)
					{
						var found:Boolean = false;
						for each(var lbZone:String in elbData.zonesCollection)
						{
							if(zone.zoneName == lbZone)
							{
								found = true;
							}
						}
						
						if(!found)
						{
							availabilityZoneList.addItem({label: zone.zoneName});
						}
					}
				}
				
				if(availabilityZoneList.length == 0)
				{
					availabilityZone.prompt = "None Available";
					submitButton.enabled = false;
				}else
				{
					availabilityZone.selectedIndex = 0;
					submitButton.enabled = true;
				}
			}
			
			protected function getAvailabilityZonesSvc_faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function submitButton_clickHandler(event:MouseEvent):void
			{
				if(availabilityZone.selectedIndex != -1)
				{
					submitButton.enabled = false;
					submitButton.label = "Adding";
					addAvailabilityZoneToLoadBalancer.send({load_balancer_name: elbData.name, availability_zone: availabilityZone.selectedLabel});
				}
			}
			
			protected function cancelButton_clickHandler(event:MouseEvent):void
			{
				PopUpManager.removePopUp(this);
			}
			
			protected function addAvailabilityZoneToLoadBalancer_resultHandler(event:ResultEvent):void
			{
				Helpers.getObjectManagement(this).elbDetails.refreshLoadBalancer.send({physical_id: elbData.name});
				PopUpManager.removePopUp(this);
			}
			
			protected function addAvailabilityZoneToLoadBalancer_faultHandler(event:FaultEvent):void
			{
				submitButton.enabled = true;
				submitButton.label = "Add";
				Alert.show("Failed to add availability zone to load balancer.");
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<services:CloudApiService id="getAvailabilityZonesSvc"
								  cloudAccountId="{cloudAccountId}"
								  region="{region}"
								  action="describe_availability_zones"
								  serviceType="{CloudApiService.EC2_SERVICE}"
								  result="getAvailabilityZonesSvc_resultHandler(event)"/>
		
		<services:CloudApiService id="addAvailabilityZoneToLoadBalancer"
								  cloudAccountId="{cloudAccountId}"
								  region="{region}"
								  action="enable_availability_zones_for_load_balancer"
								  serviceType="ELB"
								  result="addAvailabilityZoneToLoadBalancer_resultHandler(event)"
								  fault="addAvailabilityZoneToLoadBalancer_faultHandler(event)"/>
	</fx:Declarations>
	<s:VGroup width="100%" height="90%" paddingTop="10" paddingLeft="20" paddingRight="20">
		<mx:Text width="100%" text="Add an availability zone to the load balancer distribution. Requests will be evenly distributed among each of the availability zones assigned to the load balancer."/>
		<s:HGroup paddingTop="20">
			<mx:Text text="Availability Zone:"/>
			<mx:ComboBox id="availabilityZone" dataProvider="{availabilityZoneList}" prompt="Loading Zones"/>
		</s:HGroup>
	</s:VGroup>
	<s:Button id="submitButton" x="126" y="236" label="Add" click="submitButton_clickHandler(event)" enabled="false"/>
	<s:Button id="cancelButton" x="203" y="236" label="Cancel" click="cancelButton_clickHandler(event)"/>
</s:TitleWindow>
