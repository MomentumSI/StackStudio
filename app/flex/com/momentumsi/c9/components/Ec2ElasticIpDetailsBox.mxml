<?xml version="1.0" encoding="utf-8"?>
<c9:ObjectManagementDetailsBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
							   xmlns:s="library://ns.adobe.com/flex/spark" 
							   xmlns:mx="library://ns.adobe.com/flex/mx"
							   xmlns:c9="com.momentumsi.c9.components.*" 
							   xmlns:services="com.momentumsi.c9.services.*">
	
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.models.CloudAccount;
			import com.momentumsi.c9.services.CloudApiService;
			import com.momentumsi.c9.utils.Helpers;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.UIComponent;
			import mx.events.IndexChangedEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.utils.StringUtil;
			
			[Bindable]
			private var elasticIpData:Object;
			[Bindable]
			public var instanceCollection:ArrayCollection = new ArrayCollection();
			
			override public function set resourceData(value:Object):void
			{
				elasticIpData = value;
				super.resourceData = elasticIpData;
				setDisplay();
			}
			
			protected function setDisplay():void
			{
				if(elasticIpData.instanceId == null)
				{
					releaseAddressButton.enabled = true;
					disassociateAddressButton.enabled = false;
				}else
				{
					releaseAddressButton.enabled = false;
					disassociateAddressButton.enabled = true;
				}
			}
			
			protected function releaseAddressButton_clickHandler(event:MouseEvent):void
			{
				var releaseAddressPopUp:DestroyResourceObjectManagement = new DestroyResourceObjectManagement();
				releaseAddressPopUp.cloudAccountId = cloudAccount.id;
				releaseAddressPopUp.region = region;
				releaseAddressPopUp.resourceType = "elasticIpRelease";
				releaseAddressPopUp.resourceDisplayId = elasticIpData.publicIp;
				releaseAddressPopUp.resourceId = elasticIpData.publicIp;
				PopUpManager.addPopUp(releaseAddressPopUp, UIComponent(this.parentApplication), true);
			}
			
			protected function associateAddressButton_clickHandler(event:MouseEvent):void
			{
				var associateAddressPopUp:ElasticIPAssociateAddress = new ElasticIPAssociateAddress();
				associateAddressPopUp.cloudAccount = cloudAccount;
				associateAddressPopUp.region = region;
				associateAddressPopUp.address = elasticIpData.publicIp;
				associateAddressPopUp.instanceCollection = instanceCollection;
				PopUpManager.addPopUp(associateAddressPopUp, UIComponent(this.parentApplication), true);
			}
			
			protected function disassociateAddressButton_clickHandler(event:MouseEvent):void
			{
				var disassociateAddressPopUp:DestroyResourceObjectManagement = new DestroyResourceObjectManagement();
				disassociateAddressPopUp.cloudAccountId = cloudAccount.id;
				disassociateAddressPopUp.region = region;
				disassociateAddressPopUp.resourceType = "elasticIpDisassociate";
				disassociateAddressPopUp.resourceDisplayId = elasticIpData.publicIp;
				disassociateAddressPopUp.resourceId = elasticIpData.publicIp;
				PopUpManager.addPopUp(disassociateAddressPopUp, UIComponent(this.parentApplication), true);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		
	</fx:Declarations>
	
	
	<s:HGroup paddingLeft="10" gap="20">
		<c9:TextButton id="releaseAddressButton"
					   text="Release Address"
					   click="releaseAddressButton_clickHandler(event)"/>
		<c9:TextButton id="associateAddressButton"
					   text="Associate Address"
					   click="associateAddressButton_clickHandler(event)"/>
		<c9:TextButton id="disassociateAddressButton"
					   text="Disassociate Address"
					   click="disassociateAddressButton_clickHandler(event)"/>
	</s:HGroup>
	<s:BorderContainer height="100%" width="100%" alpha="1" borderVisible="false">
		<mx:TabNavigator id="elasticIpDetails" width="100%" height="100%">
			<s:NavigatorContent label="Details" width="100%" height="100%">
				<s:BorderContainer borderVisible="false"  id="details" height="100%" width="100%">
					<s:Scroller width="100%" height="100%">
						<s:viewport>
							<s:HGroup>
								<s:Form>
									<s:layout>
										<s:FormLayout gap="-7"/>
									</s:layout>
									<s:FormItem label="Address:">
										<c9:DetailsBoxLabel text="{elasticIpData.publicIp}"/>
									</s:FormItem>
									<s:FormItem label="Instance ID:">
										<c9:DetailsBoxLabel text="{elasticIpData.instanceId}"/>
									</s:FormItem>
									<s:FormItem label="Scope:">
										<c9:DetailsBoxLabel text="{elasticIpData.domain}"/>
									</s:FormItem>
								</s:Form>
							</s:HGroup>
						</s:viewport>
					</s:Scroller>
				</s:BorderContainer>
			</s:NavigatorContent>
		</mx:TabNavigator>
	</s:BorderContainer>
</c9:ObjectManagementDetailsBox>
