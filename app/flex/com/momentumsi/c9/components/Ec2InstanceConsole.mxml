<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 			   
			   xmlns:mx="library://ns.adobe.com/flex/mx" width="600" height="220"
			   close="PopUpManager.removePopUp(this)"
			   creationComplete="titlewindow1_creationCompleteHandler(event)"
			   title="SSH Console">
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.models.CloudAccount;
			
			import flash.events.Event;
			import flash.events.IOErrorEvent;
			import flash.external.ExternalInterface;
			import flash.net.FileReference;
			import flash.utils.ByteArray;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;

			[Bindable]
			public var keyName:String;
			public var dnsName:String;
			public var cloudProvider:String = CloudAccount.AMAZON;
			
			//Used for loading ssh key file
			[Bindable]
			private var fileRef:FileReference = new FileReference();
			private var keyContents:String;
			
			/*********************************************************************
			 * 
			 * Used to pass user key contents to terminal applet and launch applet
			 * 		 
			 * *******************************************************************
			 * */		
			
			protected function chooseFileButton_clickHandler(event:MouseEvent):void
			{
				fileRef.addEventListener(Event.SELECT, uploadSelectHandler);
				fileRef.addEventListener(Event.CANCEL, cancelLoadFile);
				try
				{
					var success:Boolean = fileRef.browse();
				}
				catch (error:Error)
				{
					Alert.show("Unable to browse for files.");
				}
			}
			
			protected function uploadSelectHandler(event:Event):void
			{
				filePath.text = fileRef.name;
				fileRef.addEventListener(Event.COMPLETE, fileLoadComplete);
				fileRef.addEventListener(IOErrorEvent.IO_ERROR, fileLoadError);
				fileRef.load();
			}
			
			private function cancelLoadFile(event:Event):void
			{
				fileRef = null;
			}
			
			private function fileLoadComplete(event:Event):void
			{
				var data:ByteArray = fileRef.data;
				keyContents = data.readUTFBytes(data.bytesAvailable);
				
				var newLine:RegExp = /\n/g;
				//Replace new line with *
				keyContents = keyContents.replace(/\n/g, "*");
				//New string ends with 2 *'s, remove last one
				keyContents = keyContents + "*";		
			}
			
			private function fileLoadError(error:IOErrorEvent):void
			{
				Alert.show("Unable to load selected file.");
				trace(error.text);
			}
			
			protected function openConsoleButton_clickHandler(event:MouseEvent):void
			{
				var terminalInfo:Object = call("openTerminal", { ip: dnsName, key: keyName, keyContents: keyContents, username: username.text});
				if(terminalInfo == null)
				{
					Alert.show("Unable to open console at this time.");
				}
				PopUpManager.removePopUp(this);					
			}
			
			private function call(func:String, args:Object = null):Object
			{	
				if(ExternalInterface.available)
				{
					return ExternalInterface.call(func, args);										
				}else{
					return { status:"fail" };
					Alert.show("Unable to open console at this time.");
				}
				
			}
			
			protected function titlewindow1_creationCompleteHandler(event:FlexEvent):void
			{
				PopUpManager.centerPopUp(this);
				switch(cloudProvider)
				{
					case CloudAccount.AMAZON:
						username.text = "ec2-user";
						break;
					default:
						username.text = "root";
						break;
				}				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:VGroup height="100%" width="100%" paddingTop="10" paddingLeft="10">
		<s:Label fontSize="13" fontWeight="bold"
				 text="Select your {keyName} ssh key that was used to launch this instance."/>
		<s:Form width="100%" height="120">
			<s:FormItem label="Login:" width="100%">
				<s:HGroup width="100%">
					<s:TextInput id="username"
								 width="160"/>
				</s:HGroup>			
			</s:FormItem>
			<s:FormItem label="File Path:" width="100%">
				<s:HGroup width="100%">
					<s:TextInput id="filePath" width="316"/>
					<s:Button id="chooseFileButton" label="Choose File" click="chooseFileButton_clickHandler(event)"/>
				</s:HGroup>			
			</s:FormItem>
		</s:Form>
		<s:HGroup width="100%" horizontalAlign="center">
			<s:Button label="Open Console" click="openConsoleButton_clickHandler(event)"/>
			<s:Button label="Cancel" click="PopUpManager.removePopUp(this)"/>
		</s:HGroup>
	</s:VGroup>
</s:TitleWindow>
