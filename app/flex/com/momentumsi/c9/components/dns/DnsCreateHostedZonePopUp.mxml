<?xml version="1.0" encoding="utf-8"?>
<wizard:WizardWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:mx="library://ns.adobe.com/flex/mx" 
				   width="500" height="400"
				   title="Create Hosted Zone"
				   creationComplete="creationCompleteHandler(event)"
				   xmlns:uicomponent="fr.kapit.diagrammer.base.uicomponent.*"
				   xmlns:dns="com.momentumsi.c9.components.dns.*" xmlns:services="com.momentumsi.c9.services.*" xmlns:wizard="com.momentumsi.c9.components.wizard.*">
	
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.constants.AlertMessage;
			import com.momentumsi.c9.constants.ImagePath;
			import com.momentumsi.c9.constants.ResourceTypeLabel;
			import com.momentumsi.c9.events.dns.CreateHostedZoneResultEvent;
			import com.momentumsi.c9.events.dns.DnsServiceFaultEvent;
			import com.momentumsi.c9.models.CloudAccount;
			import com.momentumsi.c9.utils.Helpers;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			private var consumptionCost:String = "N/A";
			[Bindable]
			private var dnsPrices:ArrayCollection = new ArrayCollection();
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				PopUpManager.centerPopUp(this);
				dnsService.getDnsPrices();
			}
			
			protected function create_clickHandler(event:MouseEvent):void
			{
				submitButton.enabled = false;
				dnsService.addEventListener(CreateHostedZoneResultEvent.RESULT, createHostedZoneSvc_resultHandler);
				dnsService.addEventListener(DnsServiceFaultEvent.FAULT, faultHandler);
				dnsService.createHostedZone(domainName.text, comment.text);
			}
			
			protected function createHostedZoneSvc_resultHandler(event:CreateHostedZoneResultEvent):void
			{
				Helpers.getObjectManagement(this).refreshResourceList();
				PopUpManager.removePopUp(this);
			}
			
			protected function faultHandler(event:DnsServiceFaultEvent):void
			{
				submitButton.enabled = true;
				if(dnsService.fault.hasOwnProperty('message'))
				{
					Alert.show(dnsService.fault.message);
				}
			}

			protected function nextButton_clickHandler(event:MouseEvent):void
			{
				var alert:Boolean = false;
				if(hostedZoneWizard.selectedChild == hostedZoneDetails)
				{
					var split:Array = domainName.text.split(".");
					if(domainName.text.length > 0 && split.length > 1)
					{
						domainAlert.visible = false;
					}else
					{
						domainAlert.visible = true;
						alert = true;
					}
					
					if(cloudAccount.cloud_provider == CloudAccount.AMAZON)
					{
						setConsumptionCost();
					}
				}
				
				if(!alert && hostedZoneWizard.selectedChild != reviewContent)
				{
					hostedZoneWizard.selectedIndex++;
				}
			}
			
			protected function setConsumptionCost():void
			{
				var found:Boolean = false;
				for each(var price:Object in dnsPrices)
				{
					price = price.price;
					if(!found)
					{
						if("hosted_zone" == price.name)
						{
							found = true;
							consumptionCost = "$" + (price.effective_price as Number).toFixed(2) + "/" + price.properties.denominator;
						}
					}
				}
				if(!found)
				{
					consumptionCost = "N/A";
				}
			}

			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<services:DnsService id="dnsService"
							 cloudAccountId="{cloudAccount.id}"
							 dnsPrices="{this.dnsPrices}"
							 region="{region}"/>

	</fx:Declarations>
	
	<s:VGroup width="100%" height="90%">
		<s:Group width="100%" height="60">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="#FFFFFF"/>
				</s:fill>
			</s:Rect>
			<s:HGroup width="100%" height="60" verticalAlign="middle" paddingTop="10" paddingBottom="10" paddingLeft="20"  gap="15">
				<s:Image source="{ImagePath.NEW_DNS}"/>		
				<s:Label text="Hosted Zone" fontWeight="bold" fontSize="24"/>		
			</s:HGroup>
		</s:Group>
		<s:Group height="60" width="100%">
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="#A7A9Ad"/>
				</s:fill>
			</s:Rect>
			<s:Line x="50" y="14" width="400">
				<s:stroke>
					<s:SolidColorStroke color="#838588" weight="1"/>
				</s:stroke>
			</s:Line>
			<s:Line x="50" y="15" width="400">
				<s:stroke>
					<s:SolidColorStroke color="#D1D3D8" weight="1"/>
				</s:stroke>
			</s:Line>
			<s:HGroup width="100%" gap="205" horizontalAlign="center" paddingTop="9">
				<s:VGroup horizontalAlign="center">
					<s:Image source="{ImagePath.TRAIL_KNOB}" width="16" height="16" visible="{hostedZoneWizard.selectedChild == hostedZoneDetails}"/>
					<mx:Text text="Hosted Zone Details" fontWeight="bold" enabled="{hostedZoneWizard.selectedChild == hostedZoneDetails}" disabledColor="white"/>
				</s:VGroup>
				<s:VGroup horizontalAlign="center">
					<s:Image source="{ImagePath.TRAIL_KNOB}" width="16" height="16" visible="{hostedZoneWizard.selectedChild == reviewContent}"/>
					<mx:Text text="Review" fontWeight="bold" enabled="{hostedZoneWizard.selectedChild == reviewContent}" disabledColor="white"/>
				</s:VGroup>
			</s:HGroup>
		</s:Group>
		<s:VGroup width="100%" height="100%">
			<mx:ViewStack id="hostedZoneWizard" width="100%" height="100%" creationPolicy="all" paddingTop="10" paddingLeft="20">
				<s:NavigatorContent id="hostedZoneDetails" height="100%" width="100%">
					<s:VGroup height="100%" width="100%">
						<s:Form>
							<s:FormItem label="Domain Name*: " textAlign="right">
								<s:VGroup>
									<s:HGroup>
										<s:TextInput id="domainName" textAlign="left" width="200"/>
										<mx:Text id="domainAlert" text="{AlertMessage.INVALID}" color="red" visible="false"/>
									</s:HGroup>
									<mx:Text text="e.g. example.com"/>
								</s:VGroup>
							</s:FormItem>
							<s:FormItem label="Comment: " textAlign="right">
								<s:TextInput id="comment" textAlign="left" width="300"/>
							</s:FormItem>
						</s:Form>
					</s:VGroup>
				</s:NavigatorContent>
				<s:NavigatorContent id="reviewContent" height="100%" width="100%">
					<s:VGroup paddingLeft="20" height="100%" width="100%" paddingTop="10">
						<mx:Text text="Please Review Your Hosted Zone" y="20" fontWeight="bold"/>
						<s:VGroup x="25" y="60" paddingLeft="20">
							<mx:Text text="Domain Name: {domainName.text}"/>
							<mx:Text text="Comment: {comment.text}" width="375"/>
						</s:VGroup>
						<mx:Text text="Cost: {consumptionCost}" y="20" fontWeight="bold" visible="{cloudAccount.cloud_provider == CloudAccount.AMAZON}" includeInLayout="{cloudAccount.cloud_provider == CloudAccount.AMAZON}"/>
					</s:VGroup>
				</s:NavigatorContent>
			</mx:ViewStack>
		</s:VGroup>
	</s:VGroup>
	<s:Button id="previousButton" x="10" y="336" label="Previous" click="hostedZoneWizard.selectedIndex--" enabled="{hostedZoneWizard.selectedChild != hostedZoneDetails}"/>
	<s:Button id="nextButton" x="92" y="335" label="Next" click="nextButton_clickHandler(event)" enabled="{hostedZoneWizard.selectedChild != reviewContent}"/>
	<s:Button id="submitButton" x="169" y="336" label="Finish" click="create_clickHandler(event)" enabled="{hostedZoneWizard.selectedChild == reviewContent}"/>
	<s:Button x="419" y="336" label="Cancel" click="PopUpManager.removePopUp(this)"/>
	
</wizard:WizardWindow>
