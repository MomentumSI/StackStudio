<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%" xmlns:services="com.momentumsi.c9.services.*">
	
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.events.cloudFromation.DescribeStackEventsFaultEvent;
			import com.momentumsi.c9.events.cloudFromation.DescribeStackEventsResultEvent;
			import com.momentumsi.c9.representers.CloudFormationStackEventRepresenter;
			import com.momentumsi.c9.utils.Helpers;
			
			import fr.kapit.diagrammer.Diagrammer;
			import fr.kapit.diagrammer.base.uicomponent.DiagramSprite;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;

			[Bindable]
			public var mainBox:MainBox;
			public var stackName:String;
			[Bindable]
			public var cloudAccountId:String;
			[Bindable]
			public var region:String;
			[Bindable]
			private var loadingEvents:Boolean = false;
			
			public function updateEventsFeed():void
			{
				if(stackName != null)
				{
					cfService.describeEvents(stackName);
				}
			}
			
			protected function cfService_describeStackEventsResultEventHandler(event:DescribeStackEventsResultEvent):void
			{
				if(cfService.events.length > 0)
				{
					loadingEvents = false;
					var mostRecentEvent:CloudFormationStackEventRepresenter = cfService.events.getItemAt(0) as CloudFormationStackEventRepresenter;
					if(mostRecentEvent.logicalResourceId == stackName)
					{
						//Chef for static state of stack, if in static state, cancel update calls
						if(mostRecentEvent.resourceStatus == CloudFormationStackEventRepresenter.CREATE_COMPLETE || 
							mostRecentEvent.resourceStatus == CloudFormationStackEventRepresenter.ROLLBACK_COMPLETE || 
							mostRecentEvent.resourceStatus == CloudFormationStackEventRepresenter.CREATE_FAILED ||
							mostRecentEvent.resourceStatus == CloudFormationStackEventRepresenter.DELETE_COMPLETE ||
							mostRecentEvent.resourceStatus == CloudFormationStackEventRepresenter.DELETE_FAILED)
						{
							mainBox.runningView.cancelUpdateCfnEventFeed();
							if(mostRecentEvent.resourceStatus == CloudFormationStackEventRepresenter.CREATE_COMPLETE)
							{
								mainBox.runningView.getStackOutputs();								
							}
						}
					}
				}
			}
			
			protected function cfService_describeStackEventsFaultEventHandler(event:DescribeStackEventsFaultEvent):void
			{
				mainBox.runningView.cancelRequests();
				mainBox.runningView.diagramStack.selectedIndex = 0;
				setLoadingDisplay(false);
				return;
			}
			
			public function setLoadingDisplay(loading:Boolean=true):void
			{
				loadingEvents = loading;
				if(!loading)
				{
					cfService.events.removeAll();
				}
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:DateTimeFormatter id="dateFormatter" dateTimePattern="MM/dd/yyyy hh:mm:ss a"/>

		<services:CloudFormationService id="cfService"
										cloudAccountId="{cloudAccountId}"
										region="{region}"
										describeStackEventsResult="cfService_describeStackEventsResultEventHandler(event)"
										describeStackEventsFault="cfService_describeStackEventsFaultEventHandler(event)"/>

	</fx:Declarations>
	<s:NavigatorContent id="loadingContent"
						visible="{loadingEvents}"
						includeInLayout="{loadingEvents}"
						height="100%" width="100%">
		<s:VGroup height="100%" width="100%" verticalAlign="middle" horizontalAlign="center">
			<s:BusyIndicator height="100" width="100" visible="true"/>
			<s:Label text="Loading events..." fontSize="14"/>
		</s:VGroup>
	</s:NavigatorContent>
	<s:NavigatorContent id="eventsContent"
						visible="{!loadingEvents}"
						includeInLayout="{!loadingEvents}"
						height="100%" width="100%">
		<s:DataGrid id="cloudEventsGrid" 
					height="100%" width="100%"
					dataProvider="{cfService.events}" variableRowHeight="true" fontSize="10">
			<s:columns>
				<s:ArrayList id="Columns">
					<s:GridColumn headerText="" dataField="resourceStatus" itemRenderer="com.momentumsi.c9.itemRenderers.EventFeedItem" width="20"/>
					<s:GridColumn headerText="Event Feed" dataField="displayString"/>
				</s:ArrayList>
			</s:columns>
		</s:DataGrid>
	</s:NavigatorContent>
</s:Group>
