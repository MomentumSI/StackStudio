<?xml version="1.0" encoding="utf-8"?>
<components:ObjectManagementDetailsBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
									   xmlns:s="library://ns.adobe.com/flex/spark" 
									   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:components="com.momentumsi.c9.components.*" xmlns:services="com.momentumsi.c9.services.*">
	
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.events.cache.*;
			import com.momentumsi.c9.representers.CacheSecurityGroupRepresenter;
			import com.momentumsi.c9.representers.ComputeSecurityGroupRepresenter;
			import com.momentumsi.c9.utils.Helpers;
			
			import spark.events.IndexChangeEvent;
			
			[Bindable]
			private var cacheSecurityGroup:CacheSecurityGroupRepresenter;
			private var computeSecurityGroup:ComputeSecurityGroupRepresenter;
			
			override public function set resourceData(value:Object):void
			{
				cacheSecurityGroup = new CacheSecurityGroupRepresenter(value);
				super.resourceData = cacheSecurityGroup;
				refreshDetails();
			}
			
			private function refreshDetails():void
			{
				ec2Service.securityGroups.removeAll();
				ec2Service.securityGroups.addItem({name: "Loading..."});
				ec2Service.describeSecurityGroups();
			}
			
			protected function deleteButton_clickHandler(event:MouseEvent):void
			{
				deleteButton.enabled = false;
				deleteButton.text = "Deleting";
				cacheService.deleteSecurityGroup(cacheSecurityGroup.id);
			}
			
			protected function removeButton_clickHandler(event:MouseEvent):void
			{
				removeButton.enabled = false;
				removeButton.label = "Removing";
				cacheService.revokeIngress(cacheSecurityGroup.id, computeSecurityGroup);
			}
			
			protected function addButton_clickHandler(event:MouseEvent):void
			{
				addButton.enabled = false;
				addButton.label = "Adding";
				cacheService.authorizeIngress(cacheSecurityGroup.id, computeSecurityGroup);
			}
			
			protected function cacheService_deleteCacheSecurityGroupResultHandler(event:DeleteCacheSecurityGroupResultEvent):void
			{
				deleteButton.enabled = true;
				deleteButton.text = "Delete";
				Helpers.getObjectManagement(this).refreshResourceList();
			}
			
			protected function cacheService_deleteCacheSecurityGroupFaultHandler(event:DeleteCacheSecurityGroupFaultEvent):void
			{
				deleteButton.enabled = true;
				deleteButton.text = "Delete";
			}
			
			protected function cacheService_authorizeCacheSecurityGroupIngressResultHandler(event:AuthorizeCacheSecurityGroupIngressResultEvent):void
			{
				addButton.enabled = true;
				addButton.label = "Add";
				cacheSecurityGroup = new CacheSecurityGroupRepresenter(event.result);
			}
			
			protected function cacheService_authorizeCacheSecurityGroupIngressFaultHandler(event:AuthorizeCacheSecurityGroupIngressFaultEvent):void
			{
				addButton.enabled = true;
				addButton.label = "Add";
			}
			
			protected function cacheService_revokeCacheSecurityGroupIngressResultHandler(event:RevokeCacheSecurityGroupIngressResultEvent):void
			{
				removeButton.enabled = true;
				removeButton.label = "Remove";
				cacheSecurityGroup = new CacheSecurityGroupRepresenter(event.result);
			}
			
			protected function cacheService_revokeCacheSecurityGroupIngressFaultHandler(event:RevokeCacheSecurityGroupIngressFaultEvent):void
			{
				removeButton.enabled = true;
				removeButton.label = "Remove";
			}
			
			protected function refreshButton_clickHandler(event:MouseEvent):void
			{
				refreshButton.enabled = false;
			    refreshButton.text = "Refreshing";
				cacheService.describeCacheSecurityGroups(cacheSecurityGroup.id);
			}
			
			protected function cacheService_describeCacheSecurityGroupsResultHandler(event:DescribeCacheSecurityGroupsResultEvent):void
			{
				refreshButton.enabled = true;
				refreshButton.text = "Refresh";
				cacheSecurityGroup = new CacheSecurityGroupRepresenter(event.result);
			}
			
			protected function cacheService_describeCacheSecurityGroupsFaultHandler(event:DescribeCacheSecurityGroupsFaultEvent):void
			{
				refreshButton.enabled = true;
				refreshButton.text = "Refresh";
			}
			
			protected function securityGroupList_changeHandler(event:IndexChangeEvent):void
			{
				computeSecurityGroup = securityGroupList.selectedItem as ComputeSecurityGroupRepresenter;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		
		<services:Ec2Service id="ec2Service"
							 cloudAccountId="{cloudAccount.id}"
							 region="{region}"/>
		
		<services:ElcService id="cacheService"
							 cloudAccountId="{cloudAccount.id}"
							 region="{region}"
							 deleteCacheSecurityGroupResult="cacheService_deleteCacheSecurityGroupResultHandler(event)"
							 deleteCacheSecurityGroupFault="cacheService_deleteCacheSecurityGroupFaultHandler(event)"
							 authorizeCacheSecurityGroupIngressResult="cacheService_authorizeCacheSecurityGroupIngressResultHandler(event)"
							 authorizeCacheSecurityGroupIngressFault="cacheService_authorizeCacheSecurityGroupIngressFaultHandler(event)"
							 revokeCacheSecurityGroupIngressResult="cacheService_revokeCacheSecurityGroupIngressResultHandler(event)"
							 revokeCacheSecurityGroupIngressFault="cacheService_revokeCacheSecurityGroupIngressFaultHandler(event)"
							 describeCacheSecurityGroupsResult="cacheService_describeCacheSecurityGroupsResultHandler(event)"
							 describeCacheSecurityGroupsFault="cacheService_describeCacheSecurityGroupsFaultHandler(event)"/>
	</fx:Declarations>
	<s:HGroup>
		<components:TextButton id="deleteButton"
							   text="Delete"
							   click="deleteButton_clickHandler(event)"/>
		
		<components:TextButton id="refreshButton"
							   text="Refresh"
							   click="refreshButton_clickHandler(event)"/>
	</s:HGroup>
	<s:HGroup width="100%">
		<s:Form>
			<s:layout>
				<s:FormLayout horizontalAlign="left" gap="10"/>
			</s:layout>
			<s:HGroup>
				<s:DropDownList id="securityGroupList"
								labelField="name"
								prompt="Select Source Group"
								selectedIndex="0"
								width="226"
								change="securityGroupList_changeHandler(event)"
								dataProvider="{ec2Service.securityGroups}"/>
			</s:HGroup>
			<s:Button id="addButton"
					  label="Add"
					  enabled="{securityGroupList.selectedItem != null}"
					  click="addButton_clickHandler(event)"/>
		</s:Form>
		<s:VGroup height="100%" width="100%">
			<s:DataGrid id="sourceDG"
						width="60%"
						requestedRowCount="-1"
						minHeight="0"
						dataProvider="{cacheSecurityGroup.computeSecurityGroups}">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn headerText="Compute Group" dataField="value"/>
						<s:GridColumn headerText="Status" dataField="status"/>
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>				
			<s:Button id="removeButton"
					  label="Remove"
					  enabled="{sourceDG.selectedItem != null}"
					  click="removeButton_clickHandler(event)"/>
		</s:VGroup>
	</s:HGroup>
</components:ObjectManagementDetailsBox>
