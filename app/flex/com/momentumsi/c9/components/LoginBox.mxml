<?xml version="1.0" encoding="utf-8"?>
<s:Group
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	width="100%"
    height="100%"
	creationComplete="init();"
	xmlns:services="com.momentumsi.c9.services.*">

    <fx:Script>
        <![CDATA[
			import com.adobe.net.URI;
			import com.adobe.serialization.json.JSON;
			import com.momentumsi.c9.events.AccountCreateEvent;
			import com.momentumsi.c9.events.LoginEvent;
			import com.momentumsi.c9.loggers.CustomLogger;
			
			import mx.controls.Alert;
			import mx.core.Application;
			import mx.core.FlexGlobals;
			import mx.core.UIComponent;
			import mx.logging.ILogger;
			import mx.logging.Log;
			import mx.logging.LogEventLevel;
			import mx.logging.targets.TraceTarget;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.TitleWindow;
			
			[Bindable]
			private var app:Object = FlexGlobals.topLevelApplication;
			public var newAccountBox:AccountCreateWizard;

       		[Bindable]
			private var host:String;
			[Bindable]
			private var apiHost:String;
			[Bindable]
			public var defaultButton:Button;
			[Bindable]
			private var version:String = "1.1.2";

			private static const logger:ILogger = Log.getLogger("test");
			
			private function init():void
			{	
				version = FlexGlobals.topLevelApplication.parameters.version;
				defaultButton = loginButton;
				host = app.GetConfiguration("serviceUrl").toString();
				if(host == "http://192.168.56.101:3000")
				{
					var loginName:String = app.GetConfiguration( "userName") ;
					usernameTI.text = loginName ; //loginName e.g. jlomax
					var password:String = app.GetConfiguration( "userPassword") ;
					passwordTI.text = password;					
					//login();
				}
				form.setFocus();
				this.focusManager.setFocus(usernameTI);
			}
			
            public function login():void
            {
				if(usernameTI.text.replace(/\s/g,"") == "" || passwordTI.text.replace(/\s/g, "") == "")
				{
					Alert.show("Enter username and password.", "Invalid Login");
					return;
				}
				loginButton.label = 'Logging in...';
				loginButton.enabled = false;
				authenticateUserSvc = new IdentityService();
				var topApp:C9 = C9(FlexGlobals.topLevelApplication);
				var apiHost:String = topApp.GetConfiguration("apiHost");
				authenticateUserSvc.url = apiHost;
				authenticateUserSvc.addEventListener(ResultEvent.RESULT, authenticateUserSvc_resultHandler);
				authenticateUserSvc.addEventListener(FaultEvent.FAULT, authenticateUserSvc_faultHandler);
				authenticateUserSvc.login(usernameTI.text, passwordTI.text);
            }
			
			private function forgotPasswordHandler():void
			{
				var passwordReset:PasswordResetWindow = PasswordResetWindow(PopUpManager.createPopUp( UIComponent(this.parentApplication), PasswordResetWindow , true));
			}
			
			private function newAccountHandler():void
			{
				newAccountBox = new AccountCreateWizard();
				newAccountBox.addEventListener(ResultEvent.RESULT, newUserCreated_resultHandler);
				PopUpManager.addPopUp(newAccountBox, UIComponent(this.parentApplication), true);
				newAccountBox.owner = this;
			}
			
			private function newUserCreated_resultHandler(event:ResultEvent):void
			{
				dispatchEvent(new AccountCreateEvent(event.result));
				PopUpManager.removePopUp(newAccountBox);
			}
			
			
			protected function authenticateUserSvc_resultHandler(event:ResultEvent):void
			{
				var result:Object = JSON.decode(event.result.toString());
				dispatchEvent(new LoginEvent(result));
			}
			
			protected function authenticateUserSvc_faultHandler(event:FaultEvent):void
			{
				loginButton.label = 'Login';
				loginButton.enabled = true;
			}
			
		]]>
    </fx:Script>
    <fx:Declarations>
		<services:IdentityService 
			id="authenticateUserSvc"
		    result="authenticateUserSvc_resultHandler(event)"
			fault="authenticateUserSvc_faultHandler(event)"
			showBusyCursor="true"/>
	</fx:Declarations>
	<s:VGroup horizontalAlign="center" verticalAlign="middle" height="100%" width="100%">
		<s:HGroup gap="-15" height="80%" horizontalAlign="center" width="80%">
			<s:BitmapImage height="100%" width="100%"
						   scaleMode="letterbox" 
						   smoothingQuality="high" 
						   scaleX=".80" scaleY=".80"
						   smooth="true" 
						   source="@Embed('/com/momentumsi/c9/assets/TranscendLogos/StackStudioLogo_LRG.png')"/>
			<!--
			<s:VGroup height="100%" verticalAlign="middle" paddingTop="45">
				<s:Label text="beta" fontFamily="Times New Roman" fontWeight="bold" fontSize="22" color="gray"/>
			</s:VGroup>
			-->
		</s:HGroup>				
		<s:BorderContainer width="100%" height="100%" borderStyle="inset" borderWeight="3" defaultButton="{defaultButton}">
			<s:backgroundFill>
				<s:SolidColor color="#D6D6D6" alpha="1"/>
			</s:backgroundFill>
			<s:VGroup height="100%" width="100%">
				<s:VGroup height="100%" width="100%" horizontalAlign="center" verticalAlign="middle">
					<s:HGroup height="100%" width="100%" horizontalAlign="center">
						<s:Form id="form" defaultButton="{defaultButton}" creationPolicy="all">
							<s:FormItem id="usernameItem" required="true" label="User Name:" width="100%">
								<s:TextInput id="usernameTI" width="192" text=""/>
							</s:FormItem>
							<s:FormItem required="true" label="Password:" width="300">
								<s:TextInput id="passwordTI" width="192" displayAsPassword="true"/>
							</s:FormItem>
							<s:FormItem label="Version:">
								<mx:Text text="{version}"/>
							</s:FormItem>
						</s:Form>
					</s:HGroup>
					<s:VGroup width="100%" height="100%" horizontalAlign="center" verticalAlign="bottom" paddingBottom="50">
						<s:HGroup>
							<s:Button id="newAccount" label="New Account" click="newAccountHandler()"
									  styleName="customButton"/>
							<s:Button id="loginButton"
									  width="106"
									  label="Login"
									  click="login()" 
									  includeInLayout="{loginButton.visible}" 
									  styleName="customButton"/>
						</s:HGroup>
						<s:HGroup width="100%" horizontalAlign="right" paddingRight="5" paddingBottom="10">
							<s:Image x="786" width="103" height="40"
									 source="com/momentumsi/c9/assets/TranscendLogoSml.png"/>
						</s:HGroup>
					</s:VGroup>					
				</s:VGroup>
			</s:VGroup>
			<!--<mx:LinkButton id="forgotPassword" x="287" y="129" label="Forgot Password" click="forgotPasswordHandler()" textDecoration="underline"/>-->
		</s:BorderContainer>
	</s:VGroup>    
</s:Group>