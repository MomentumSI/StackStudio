<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   close="PopUpManager.removePopUp(this)"
			   initialize="init(event)"
			   creationComplete="createCompleteHandler(event)"
			   width="472" height="544" title="Amazon Multi-Region Mapping">
	
	<fx:Script>
		<![CDATA[
			import com.maccherone.json.JSON;
			import com.momentumsi.c9.utils.Helpers;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			private var newImageMap:XML;
			[Bindable]
			private var host:String;
			public var imageSelectionWindow:Ec2ImageSelection;
			
		private var validImagePattern:RegExp = /ami-[a-z0-9]{8}/;
			
			protected function init(event:FlexEvent):void
			{
				host = Helpers.getHost();
			}
			
			protected function saveButton_clickHandler(event:MouseEvent):void
			{
				if(mapName.text.replace(" ", "") == "")
				{
					Alert.show('Map name is required.');
					return;
				}
				var imageMap:Object = new Object();
				var ec2ImagesArray:Array = new Array();
				var ec2Image:Object;
				if(usEastEnable.selected)
				{
					ec2Image = new Object();
					ec2Image['image_ami_id'] = usEastImage.text;
					ec2Image['region'] = "us-east-1";
					ec2Image['region_display'] = "US East";
					ec2ImagesArray.push(ec2Image);
				}
				if(usWest1Enable.selected)
				{
					ec2Image = new Object();
					ec2Image['image_ami_id'] = usWest1Image.text;
					ec2Image['region'] = "us-west-1";
					ec2Image['region_display'] = "US West (N. California)";
					ec2ImagesArray.push(ec2Image);
				}
				if(usWest2Enable.selected)
				{
					ec2Image = new Object();
					ec2Image['image_ami_id'] = usWest2Image.text;
					ec2Image['region'] = "us-west-2";
					ec2Image['region_display'] = "US West (Oregon)";
					ec2ImagesArray.push(ec2Image);
				}
				if(saEnable.selected)
				{
					ec2Image = new Object();
					ec2Image['image_ami_id'] = saImage.text;
					ec2Image['region'] = "sa-east-1";
					ec2Image['region_display'] = "SA (Sao Paulo)";
					ec2ImagesArray.push(ec2Image);
				}
				if(europeEnable.selected)
				{
					ec2Image = new Object();
					ec2Image['image_ami_id'] = europeImage.text;
					ec2Image['region'] = "eu-west-1";
					ec2Image['region_display'] = "Europe";
					ec2ImagesArray.push(ec2Image);
				}
				if(apNortheastEnable.selected)
				{
					ec2Image = new Object();
					ec2Image['image_ami_id'] = apNortheastImage.text;
					ec2Image['region'] = "ap-northeast-1";
					ec2Image['region_display'] = "AP Northeast";
					ec2ImagesArray.push(ec2Image);
				}
				if(apSoutheastEnable.selected)
				{
					ec2Image = new Object();
					ec2Image['image_ami_id'] = apSoutheastImage.text;
					ec2Image['region'] = "ap-southeast-1";
					ec2Image['region_display'] = "AP Southeast";
					ec2ImagesArray.push(ec2Image);	
				}
				var ec2ImagesString:String = JSON.encode({ec2_images: ec2ImagesArray});
				imageMap['name'] = mapName.text;
				imageMap['operating_system'] = platform.selectedLabel;
				imageMap['backed_by'] = backedBy.selectedLabel;
				imageMap['architecture'] = architecture.selectedItem.value;
				var imageMapString:String = JSON.encode(imageMap);
				createNewImageMapSvc.send({image_map: imageMapString, ec2_images: ec2ImagesString});				
			}
			
			protected function cancelButton_clickHandler(event:MouseEvent):void
			{
				PopUpManager.removePopUp(this);
			}

			
			protected function createNewImageMapSvc_resultHandler(event:ResultEvent):void
			{
				var mapping:XML = event.result as XML;
				imageSelectionWindow.imageMappings.addItem({map: mapping.child('image-map'), images: mapping.child('ec2-images')});
				PopUpManager.removePopUp(this);
			}
			
			protected function createNewImageMapSvc_faultHandler(event:FaultEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			protected function createCompleteHandler(event:FlexEvent):void
			{
				PopUpManager.centerPopUp(this);
			}
			
			protected function newImage_focusOutHandler(event:FocusEvent):void
			{
				var currentTextInput:TextInput = event.currentTarget as TextInput;
				if(currentTextInput.text.length > 12){
					Alert.show("Invalid image-id (too long).");
				}else{
					if(currentTextInput.text.replace(" ", "") != "")
					{
						if(!(validImagePattern.test(currentTextInput.text)))
						{
							Alert.show('"' + currentTextInput.text + '"' + ' is not a valid image-id.');
						}
					}
				}
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<s:HTTPService id="createNewImageMapSvc"
					   url="{host}/image_maps/create_new_map"
					   method="POST"
					   resultFormat="e4x"
					   showBusyCursor="true"
					   result="createNewImageMapSvc_resultHandler(event)"
					   fault="createNewImageMapSvc_faultHandler(event)"/>
		
	</fx:Declarations>
	<s:VGroup height="100%" width="100%">
		<s:Form defaultButton="{saveButton}" height="454" width="100%">
			<s:layout>
				<s:FormLayout gap="-2"/>
			</s:layout>
			<s:Label text="Check the images you want to be added to your map."/>
			<s:FormItem label="Name*:">
				<s:TextInput id="mapName" width="264"/>
			</s:FormItem>
			<s:FormItem label="US East">
				<s:HGroup>
					<s:TextInput id="usEastImage" focusOut="newImage_focusOutHandler(event)"/>
					<s:VGroup height="100%" width="100%" horizontalAlign="right" verticalAlign="middle">
						<s:CheckBox id="usEastEnable" tabFocusEnabled="false"/>
					</s:VGroup>
				</s:HGroup>
			</s:FormItem>
			<s:FormItem label="US West (Oregon)">
				<s:HGroup>
					<s:TextInput id="usWest1Image" focusOut="newImage_focusOutHandler(event)"/>
					<s:VGroup height="100%" width="100%" horizontalAlign="right" verticalAlign="middle">
						<s:CheckBox id="usWest1Enable" tabFocusEnabled="false"/>
					</s:VGroup>
				</s:HGroup>
			</s:FormItem>
			<s:FormItem label="US West (N. California)">
				<s:HGroup>
					<s:TextInput id="usWest2Image" focusOut="newImage_focusOutHandler(event)"/>
					<s:VGroup height="100%" width="100%" horizontalAlign="right" verticalAlign="middle">
						<s:CheckBox id="usWest2Enable" tabFocusEnabled="false"/>
					</s:VGroup>
				</s:HGroup>
			</s:FormItem>
			<s:FormItem label="SA (Sao Paulo)">
				<s:HGroup>
					<s:TextInput id="saImage" focusOut="newImage_focusOutHandler(event)"/>
					<s:VGroup height="100%" width="100%" horizontalAlign="right" verticalAlign="middle">
						<s:CheckBox id="saEnable" tabFocusEnabled="false"/>
					</s:VGroup>
				</s:HGroup>
			</s:FormItem>
			<s:FormItem label="Europe">
				<s:HGroup>
					<s:TextInput id="europeImage" focusOut="newImage_focusOutHandler(event)"/>
					<s:VGroup height="100%" width="100%" horizontalAlign="right" verticalAlign="middle">
						<s:CheckBox id="europeEnable" tabFocusEnabled="false"/>
					</s:VGroup>
				</s:HGroup>
			</s:FormItem>
			<s:FormItem label="AP Southeast">
				<s:HGroup>
					<s:TextInput id="apSoutheastImage" focusOut="newImage_focusOutHandler(event)"/>
					<s:VGroup height="100%" width="100%" horizontalAlign="right" verticalAlign="middle">
						<s:CheckBox id="apSoutheastEnable" tabFocusEnabled="false"/>
					</s:VGroup>
				</s:HGroup>
			</s:FormItem>
			<s:FormItem label="AP Northeast">
				<s:HGroup>
					<s:TextInput id="apNortheastImage" focusOut="newImage_focusOutHandler(event)"/>
					<s:VGroup height="100%" width="100%" horizontalAlign="right" verticalAlign="middle">
						<s:CheckBox id="apNortheastEnable" tabFocusEnabled="false"/>
					</s:VGroup>
				</s:HGroup>
			</s:FormItem>
			<s:FormItem label="Architecture:">
				<mx:ComboBox id="architecture" labelField="label">
					<mx:dataProvider>
						<s:ArrayCollection>
							<fx:Object label="32-bit" value="i386"/>
							<fx:Object label="64-bit" value="x86_64"/>
						</s:ArrayCollection>
					</mx:dataProvider>
				</mx:ComboBox>
			</s:FormItem>
			<s:FormItem label="Backed By:">
				<mx:ComboBox id="backedBy" labelField="value">
					<mx:dataProvider>
						<s:ArrayCollection>
							<fx:Object value="EBS"/>
							<fx:Object value="S3"/>
						</s:ArrayCollection>
					</mx:dataProvider>
				</mx:ComboBox>
			</s:FormItem>
			<s:FormItem label="Platform">
				<mx:ComboBox id="platform" labelField="value">
					<mx:dataProvider>
						<s:ArrayCollection>
							<fx:Object value="Linux"/>
							<fx:Object value="Windows"/>
						</s:ArrayCollection>
					</mx:dataProvider>
				</mx:ComboBox>
			</s:FormItem>			
		</s:Form>
		<s:HGroup width="100%" height="33" horizontalAlign="center" paddingTop="10">
			<s:Button label="Save" id="saveButton" click="saveButton_clickHandler(event)"/>
			<s:Button label="Cancel" id="cancelButton" click="cancelButton_clickHandler(event)"/>
		</s:HGroup>
	</s:VGroup>
</s:TitleWindow>
