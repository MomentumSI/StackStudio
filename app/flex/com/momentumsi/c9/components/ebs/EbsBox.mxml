<?xml version="1.0" encoding="utf-8"?>
<c9:DetailsBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:c9="com.momentumsi.c9.components.*"
		 width="100%" height="100%"
		 initialize="init(event)" xmlns:diagrammer="fr.kapit.diagrammer.base.uicomponent.*" xmlns:models="com.momentumsi.c9.models.*">
	
	<fx:Script>
		<![CDATA[
			import com.momentumsi.c9.components.MainBox;
			import com.momentumsi.c9.utils.Helpers;
			import com.momentumsi.c9.models.ProvisionedInstance;
			import com.momentumsi.c9.services.MonitoringService;
			
			import fr.kapit.diagrammer.Diagrammer;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.core.FlexGlobals;
			import mx.core.UIComponent;
			import mx.events.FlexEvent;
			import mx.events.IndexChangedEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			[Bindable]
			public var newEbsVolumeName:String = "";
			[Bindable]
			private var host:String;
			[Bindable]
			public var ebsEvents:ArrayCollection = new ArrayCollection();
			[Bindable]
			private var thisEbsEvents:ArrayCollection = new ArrayCollection();
			private var app:Object = FlexGlobals.topLevelApplication;
			private var accountId:int;
			[Bindable]
			private var projectId:int; 
			
			protected function init(event:FlexEvent):void
			{
				host = app.GetConfiguration( "serviceUrl" ) ;
			}

			
			protected function createSnapshotButton_clickHandler(event:MouseEvent):void
			{
				var snapshotPopUp:EbsCreateSnapshotPopUp = EbsCreateSnapshotPopUp(PopUpManager.createPopUp( UIComponent(this.parentApplication), EbsCreateSnapshotPopUp , true));
				snapshotPopUp.ebsVolume = this.ebsVolume;
				
			}
			
			protected function fillInformation():void
			{
				volumeId.text = ebsVolume.child('ebs-id');
				if(ebsVolume.child('snapshot-id').toString() == "")
				{
					snapshotIdItem.visible = false;
				}else{
					snapshotId.text = ebsVolume.child('snapshot-id');
				}
				if (ebsVolume.child('ec2-instance-id').toString() == "")
				{
					attachmentItem.visible = false;
				}else{
					attachmentId.text = ebsVolume.child('ec2-instance-id') + ":" + ebsVolume.child('device');
				}
				capacity.text = ebsVolume.child('size') + " GB";
				dateCreated.text = ebsVolume.child('created-at');
				ebsStatus.text = ebsVolume.child('status').toString().split(" ")[0].toString();
			}

			
			protected function ebsDetails_changeHandler(event:IndexChangedEvent):void
			{
				if(ebsDetails.selectedIndex == 1)
				{
					monitoringBox.resource = node;
					monitoringBox.getDefaultMonitorsCall(MonitoringService.EBS_DEFAULT);
				}
			}
			
			
			protected function deleteButton_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
			}
			
			[Bindable]
			private var _volumeObject:Object = new Object();
			override public function set resourceObject(value:Object):void
			{
				_volumeObject = value;
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<fx:XML id="ebsVolume"/>		
		<s:HTTPService id="deleteEbsVolumeSvc"
					   url="{host}/ebs_volumes/{ebsVolume.child('id')}.xml"
					   method="POST"
					   showBusyCursor="true"/>
	</fx:Declarations>
	<s:HGroup id="ebsButtonBar" height="25" paddingLeft="10">
		<s:Button id="deleteButton" label="Delete Volume" click="deleteButton_clickHandler(event)"/>
		<!--
		<s:Button id="attachButton" label="Attach Volume" click="attachButton_clickHandler(event)" enabled="{ebsStatus.text == 'available'}"/>
		<s:Button id="detachButton" label="Detach Volume" click="detachButton_clickHandler(event)" enabled="{ebsStatus.text == 'in-use'}"/>
		<s:Button id="forceDetachButton" label="Force Detach" click="forceDetachButton_clickHandler(event)" enabled="false"/>
		<s:Button id="createSnapshotButton" label="Create Snapshot" click="createSnapshotButton_clickHandler(event)"/>
		-->
	</s:HGroup>
	<s:BorderContainer height="100%" width="100%" alpha="1" borderVisible="false">
		<c9:DetailsBoxTabNavigator id="ebsDetails" change="ebsDetails_changeHandler(event)">
			<s:NavigatorContent label="Details" width="100%" height="100%">
				<s:BorderContainer borderVisible="false"  id="details" height="100%" width="100%">
					<s:BusyIndicator id="busy" width="100" height="100" visible="false"/>
					<s:HGroup id="form">
						<s:Form>
							<s:layout>
								<s:FormLayout gap="-7"/>
							</s:layout>
							<s:FormItem label="Volume ID:">
								<mx:Text text="{_volumeObject.aws_id}" id="volumeId"/>
							</s:FormItem>
							<s:FormItem label="Snapshot:" id="snapshotIdItem">
								<mx:Text text="{_volumeObject.snapshot_id}" id="snapshotId"/>
							</s:FormItem>
							<s:FormItem label="Zone:">
								<mx:Text text="{_volumeObject.zone}" id="az"/>
							</s:FormItem>
							<s:FormItem label="Attachment:" id="attachmentItem">
								<mx:Text id="attachmentId"/>
							</s:FormItem>
						</s:Form>
						<s:Form>
							<s:layout>
								<s:FormLayout gap="-7"/>
							</s:layout>
							<s:FormItem label="Capacity:">
								<mx:Text id="capacity" text="{_volumeObject.aws_size} GB"/>
							</s:FormItem>
							<s:FormItem label="Created:">
								<mx:Text id="dateCreated"/>
							</s:FormItem>
							<s:FormItem label="Status:">
								<mx:Text id="ebsStatus" text="{_volumeObject.aws_status}"/>
							</s:FormItem>
						</s:Form>
					</s:HGroup>
				</s:BorderContainer>
			</s:NavigatorContent>
			<s:NavigatorContent label="Monitoring" width="100%" height="100%">
				<s:BorderContainer borderVisible="false" id="monitoring" height="100%" width="100%">
					<c9:MonitoringBox id="monitoringBox" 
									  width="100%" height="100%"
									  cloudAccountId="{cloudAccountId}"/>
				</s:BorderContainer>
			</s:NavigatorContent>
			<s:NavigatorContent label="Recent Events" width="100%" height="100%">
				<s:BorderContainer borderVisible="false" id="recentEvents" height="100%" width="100%">
					<mx:DataGrid id="ebsEventsGrid" width="100%" height="100%" dataProvider="{thisEbsEvents}">
						<mx:columns>
							<mx:DataGridColumn headerText="Event Details" dataField="details" width="220"/>
							<mx:DataGridColumn headerText="Event Type" dataField="type" width="100"/>
							<mx:DataGridColumn headerText="Event Time" dataField="time"/>
						</mx:columns>
					</mx:DataGrid>
				</s:BorderContainer>
			</s:NavigatorContent>
		</c9:DetailsBoxTabNavigator>
	</s:BorderContainer>
</c9:DetailsBox>
